
167_BitfieldExercise.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001244  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d0  080013d4  080013d4  000023d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014a4  080014a4  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  080014a4  080014a4  000024a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080014ac  080014ac  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014ac  080014ac  000024ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014b0  080014b0  000024b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080014b4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000920  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000030b  00000000  00000000  000039a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00003cb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000be  00000000  00000000  00003dd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002cc8  00000000  00000000  00003e8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001466  00000000  00000000  00006b56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000979f  00000000  00000000  00007fbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001175b  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b44  00000000  00000000  000117a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000084  00000000  00000000  000122e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080013bc 	.word	0x080013bc

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	080013bc 	.word	0x080013bc

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf("Hello world!\n");
 8000274:	480e      	ldr	r0, [pc, #56]	@ (80002b0 <main+0x40>)
 8000276:	f000 fa43 	bl	8000700 <puts>
	printf("sizeof struct RCC_AHB1ENR_t = %d",sizeof(RCC_AHB1ENR_t));
 800027a:	2104      	movs	r1, #4
 800027c:	480d      	ldr	r0, [pc, #52]	@ (80002b4 <main+0x44>)
 800027e:	f000 f9d7 	bl	8000630 <iprintf>
	printf("Size of short = %d\n", sizeof(short));
 8000282:	2102      	movs	r1, #2
 8000284:	480c      	ldr	r0, [pc, #48]	@ (80002b8 <main+0x48>)
 8000286:	f000 f9d3 	bl	8000630 <iprintf>
	printf("Size of int = %d\n", sizeof(int));
 800028a:	2104      	movs	r1, #4
 800028c:	480b      	ldr	r0, [pc, #44]	@ (80002bc <main+0x4c>)
 800028e:	f000 f9cf 	bl	8000630 <iprintf>
	printf("Size of long = %d\n", sizeof(long));
 8000292:	2104      	movs	r1, #4
 8000294:	480a      	ldr	r0, [pc, #40]	@ (80002c0 <main+0x50>)
 8000296:	f000 f9cb 	bl	8000630 <iprintf>
	printf("Size of long long = %d\n", sizeof(long long));
 800029a:	2108      	movs	r1, #8
 800029c:	4809      	ldr	r0, [pc, #36]	@ (80002c4 <main+0x54>)
 800029e:	f000 f9c7 	bl	8000630 <iprintf>
	printf("Size of double = %d\n", sizeof(double));
 80002a2:	2108      	movs	r1, #8
 80002a4:	4808      	ldr	r0, [pc, #32]	@ (80002c8 <main+0x58>)
 80002a6:	f000 f9c3 	bl	8000630 <iprintf>

	return 0;
 80002aa:	2300      	movs	r3, #0
	for(;;);
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	bd80      	pop	{r7, pc}
 80002b0:	080013d4 	.word	0x080013d4
 80002b4:	080013e4 	.word	0x080013e4
 80002b8:	08001408 	.word	0x08001408
 80002bc:	0800141c 	.word	0x0800141c
 80002c0:	08001430 	.word	0x08001430
 80002c4:	08001444 	.word	0x08001444
 80002c8:	0800145c 	.word	0x0800145c

080002cc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002cc:	b480      	push	{r7}
 80002ce:	b083      	sub	sp, #12
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	4603      	mov	r3, r0
 80002d4:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002d6:	4b0e      	ldr	r3, [pc, #56]	@ (8000310 <ITM_SendChar+0x44>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	4a0d      	ldr	r2, [pc, #52]	@ (8000310 <ITM_SendChar+0x44>)
 80002dc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002e0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002e2:	4b0c      	ldr	r3, [pc, #48]	@ (8000314 <ITM_SendChar+0x48>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4a0b      	ldr	r2, [pc, #44]	@ (8000314 <ITM_SendChar+0x48>)
 80002e8:	f043 0301 	orr.w	r3, r3, #1
 80002ec:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002ee:	bf00      	nop
 80002f0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	f003 0301 	and.w	r3, r3, #1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d0f8      	beq.n	80002f0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002fe:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000302:	79fb      	ldrb	r3, [r7, #7]
 8000304:	6013      	str	r3, [r2, #0]
}
 8000306:	bf00      	nop
 8000308:	370c      	adds	r7, #12
 800030a:	46bd      	mov	sp, r7
 800030c:	bc80      	pop	{r7}
 800030e:	4770      	bx	lr
 8000310:	e000edfc 	.word	0xe000edfc
 8000314:	e0000e00 	.word	0xe0000e00

08000318 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000318:	b580      	push	{r7, lr}
 800031a:	b086      	sub	sp, #24
 800031c:	af00      	add	r7, sp, #0
 800031e:	60f8      	str	r0, [r7, #12]
 8000320:	60b9      	str	r1, [r7, #8]
 8000322:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000324:	2300      	movs	r3, #0
 8000326:	617b      	str	r3, [r7, #20]
 8000328:	e00a      	b.n	8000340 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800032a:	f3af 8000 	nop.w
 800032e:	4601      	mov	r1, r0
 8000330:	68bb      	ldr	r3, [r7, #8]
 8000332:	1c5a      	adds	r2, r3, #1
 8000334:	60ba      	str	r2, [r7, #8]
 8000336:	b2ca      	uxtb	r2, r1
 8000338:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033a:	697b      	ldr	r3, [r7, #20]
 800033c:	3301      	adds	r3, #1
 800033e:	617b      	str	r3, [r7, #20]
 8000340:	697a      	ldr	r2, [r7, #20]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	429a      	cmp	r2, r3
 8000346:	dbf0      	blt.n	800032a <_read+0x12>
  }

  return len;
 8000348:	687b      	ldr	r3, [r7, #4]
}
 800034a:	4618      	mov	r0, r3
 800034c:	3718      	adds	r7, #24
 800034e:	46bd      	mov	sp, r7
 8000350:	bd80      	pop	{r7, pc}

08000352 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000352:	b580      	push	{r7, lr}
 8000354:	b086      	sub	sp, #24
 8000356:	af00      	add	r7, sp, #0
 8000358:	60f8      	str	r0, [r7, #12]
 800035a:	60b9      	str	r1, [r7, #8]
 800035c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035e:	2300      	movs	r3, #0
 8000360:	617b      	str	r3, [r7, #20]
 8000362:	e009      	b.n	8000378 <_write+0x26>
  {
    //__io_putchar(*ptr++); //change for printf
	ITM_SendChar(*ptr++);
 8000364:	68bb      	ldr	r3, [r7, #8]
 8000366:	1c5a      	adds	r2, r3, #1
 8000368:	60ba      	str	r2, [r7, #8]
 800036a:	781b      	ldrb	r3, [r3, #0]
 800036c:	4618      	mov	r0, r3
 800036e:	f7ff ffad 	bl	80002cc <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000372:	697b      	ldr	r3, [r7, #20]
 8000374:	3301      	adds	r3, #1
 8000376:	617b      	str	r3, [r7, #20]
 8000378:	697a      	ldr	r2, [r7, #20]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	429a      	cmp	r2, r3
 800037e:	dbf1      	blt.n	8000364 <_write+0x12>
  }
  return len;
 8000380:	687b      	ldr	r3, [r7, #4]
}
 8000382:	4618      	mov	r0, r3
 8000384:	3718      	adds	r7, #24
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}

0800038a <_close>:

int _close(int file)
{
 800038a:	b480      	push	{r7}
 800038c:	b083      	sub	sp, #12
 800038e:	af00      	add	r7, sp, #0
 8000390:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000392:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000396:	4618      	mov	r0, r3
 8000398:	370c      	adds	r7, #12
 800039a:	46bd      	mov	sp, r7
 800039c:	bc80      	pop	{r7}
 800039e:	4770      	bx	lr

080003a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003a0:	b480      	push	{r7}
 80003a2:	b083      	sub	sp, #12
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	6078      	str	r0, [r7, #4]
 80003a8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003aa:	683b      	ldr	r3, [r7, #0]
 80003ac:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003b0:	605a      	str	r2, [r3, #4]
  return 0;
 80003b2:	2300      	movs	r3, #0
}
 80003b4:	4618      	mov	r0, r3
 80003b6:	370c      	adds	r7, #12
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bc80      	pop	{r7}
 80003bc:	4770      	bx	lr

080003be <_isatty>:

int _isatty(int file)
{
 80003be:	b480      	push	{r7}
 80003c0:	b083      	sub	sp, #12
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003c6:	2301      	movs	r3, #1
}
 80003c8:	4618      	mov	r0, r3
 80003ca:	370c      	adds	r7, #12
 80003cc:	46bd      	mov	sp, r7
 80003ce:	bc80      	pop	{r7}
 80003d0:	4770      	bx	lr

080003d2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b085      	sub	sp, #20
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	60f8      	str	r0, [r7, #12]
 80003da:	60b9      	str	r1, [r7, #8]
 80003dc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003de:	2300      	movs	r3, #0
}
 80003e0:	4618      	mov	r0, r3
 80003e2:	3714      	adds	r7, #20
 80003e4:	46bd      	mov	sp, r7
 80003e6:	bc80      	pop	{r7}
 80003e8:	4770      	bx	lr
	...

080003ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b086      	sub	sp, #24
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003f4:	4a14      	ldr	r2, [pc, #80]	@ (8000448 <_sbrk+0x5c>)
 80003f6:	4b15      	ldr	r3, [pc, #84]	@ (800044c <_sbrk+0x60>)
 80003f8:	1ad3      	subs	r3, r2, r3
 80003fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003fc:	697b      	ldr	r3, [r7, #20]
 80003fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000400:	4b13      	ldr	r3, [pc, #76]	@ (8000450 <_sbrk+0x64>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	2b00      	cmp	r3, #0
 8000406:	d102      	bne.n	800040e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000408:	4b11      	ldr	r3, [pc, #68]	@ (8000450 <_sbrk+0x64>)
 800040a:	4a12      	ldr	r2, [pc, #72]	@ (8000454 <_sbrk+0x68>)
 800040c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800040e:	4b10      	ldr	r3, [pc, #64]	@ (8000450 <_sbrk+0x64>)
 8000410:	681a      	ldr	r2, [r3, #0]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4413      	add	r3, r2
 8000416:	693a      	ldr	r2, [r7, #16]
 8000418:	429a      	cmp	r2, r3
 800041a:	d207      	bcs.n	800042c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800041c:	f000 fa9e 	bl	800095c <__errno>
 8000420:	4603      	mov	r3, r0
 8000422:	220c      	movs	r2, #12
 8000424:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000426:	f04f 33ff 	mov.w	r3, #4294967295
 800042a:	e009      	b.n	8000440 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800042c:	4b08      	ldr	r3, [pc, #32]	@ (8000450 <_sbrk+0x64>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000432:	4b07      	ldr	r3, [pc, #28]	@ (8000450 <_sbrk+0x64>)
 8000434:	681a      	ldr	r2, [r3, #0]
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4413      	add	r3, r2
 800043a:	4a05      	ldr	r2, [pc, #20]	@ (8000450 <_sbrk+0x64>)
 800043c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800043e:	68fb      	ldr	r3, [r7, #12]
}
 8000440:	4618      	mov	r0, r3
 8000442:	3718      	adds	r7, #24
 8000444:	46bd      	mov	sp, r7
 8000446:	bd80      	pop	{r7, pc}
 8000448:	20020000 	.word	0x20020000
 800044c:	00000400 	.word	0x00000400
 8000450:	20000078 	.word	0x20000078
 8000454:	200001c8 	.word	0x200001c8

08000458 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000458:	480d      	ldr	r0, [pc, #52]	@ (8000490 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800045a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800045c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000460:	480c      	ldr	r0, [pc, #48]	@ (8000494 <LoopForever+0x6>)
  ldr r1, =_edata
 8000462:	490d      	ldr	r1, [pc, #52]	@ (8000498 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000464:	4a0d      	ldr	r2, [pc, #52]	@ (800049c <LoopForever+0xe>)
  movs r3, #0
 8000466:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000468:	e002      	b.n	8000470 <LoopCopyDataInit>

0800046a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800046a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800046c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800046e:	3304      	adds	r3, #4

08000470 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000470:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000472:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000474:	d3f9      	bcc.n	800046a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000476:	4a0a      	ldr	r2, [pc, #40]	@ (80004a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000478:	4c0a      	ldr	r4, [pc, #40]	@ (80004a4 <LoopForever+0x16>)
  movs r3, #0
 800047a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800047c:	e001      	b.n	8000482 <LoopFillZerobss>

0800047e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800047e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000480:	3204      	adds	r2, #4

08000482 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000482:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000484:	d3fb      	bcc.n	800047e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000486:	f000 fa6f 	bl	8000968 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800048a:	f7ff fef1 	bl	8000270 <main>

0800048e <LoopForever>:

LoopForever:
  b LoopForever
 800048e:	e7fe      	b.n	800048e <LoopForever>
  ldr   r0, =_estack
 8000490:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000494:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000498:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800049c:	080014b4 	.word	0x080014b4
  ldr r2, =_sbss
 80004a0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004a4:	200001c8 	.word	0x200001c8

080004a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a8:	e7fe      	b.n	80004a8 <ADC_IRQHandler>
	...

080004ac <std>:
 80004ac:	2300      	movs	r3, #0
 80004ae:	b510      	push	{r4, lr}
 80004b0:	4604      	mov	r4, r0
 80004b2:	e9c0 3300 	strd	r3, r3, [r0]
 80004b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004ba:	6083      	str	r3, [r0, #8]
 80004bc:	8181      	strh	r1, [r0, #12]
 80004be:	6643      	str	r3, [r0, #100]	@ 0x64
 80004c0:	81c2      	strh	r2, [r0, #14]
 80004c2:	6183      	str	r3, [r0, #24]
 80004c4:	4619      	mov	r1, r3
 80004c6:	2208      	movs	r2, #8
 80004c8:	305c      	adds	r0, #92	@ 0x5c
 80004ca:	f000 f9f9 	bl	80008c0 <memset>
 80004ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000504 <std+0x58>)
 80004d0:	6263      	str	r3, [r4, #36]	@ 0x24
 80004d2:	4b0d      	ldr	r3, [pc, #52]	@ (8000508 <std+0x5c>)
 80004d4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80004d6:	4b0d      	ldr	r3, [pc, #52]	@ (800050c <std+0x60>)
 80004d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80004da:	4b0d      	ldr	r3, [pc, #52]	@ (8000510 <std+0x64>)
 80004dc:	6323      	str	r3, [r4, #48]	@ 0x30
 80004de:	4b0d      	ldr	r3, [pc, #52]	@ (8000514 <std+0x68>)
 80004e0:	6224      	str	r4, [r4, #32]
 80004e2:	429c      	cmp	r4, r3
 80004e4:	d006      	beq.n	80004f4 <std+0x48>
 80004e6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004ea:	4294      	cmp	r4, r2
 80004ec:	d002      	beq.n	80004f4 <std+0x48>
 80004ee:	33d0      	adds	r3, #208	@ 0xd0
 80004f0:	429c      	cmp	r4, r3
 80004f2:	d105      	bne.n	8000500 <std+0x54>
 80004f4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004fc:	f000 ba58 	b.w	80009b0 <__retarget_lock_init_recursive>
 8000500:	bd10      	pop	{r4, pc}
 8000502:	bf00      	nop
 8000504:	08000711 	.word	0x08000711
 8000508:	08000733 	.word	0x08000733
 800050c:	0800076b 	.word	0x0800076b
 8000510:	0800078f 	.word	0x0800078f
 8000514:	2000007c 	.word	0x2000007c

08000518 <stdio_exit_handler>:
 8000518:	4a02      	ldr	r2, [pc, #8]	@ (8000524 <stdio_exit_handler+0xc>)
 800051a:	4903      	ldr	r1, [pc, #12]	@ (8000528 <stdio_exit_handler+0x10>)
 800051c:	4803      	ldr	r0, [pc, #12]	@ (800052c <stdio_exit_handler+0x14>)
 800051e:	f000 b869 	b.w	80005f4 <_fwalk_sglue>
 8000522:	bf00      	nop
 8000524:	20000000 	.word	0x20000000
 8000528:	08001245 	.word	0x08001245
 800052c:	20000010 	.word	0x20000010

08000530 <cleanup_stdio>:
 8000530:	6841      	ldr	r1, [r0, #4]
 8000532:	4b0c      	ldr	r3, [pc, #48]	@ (8000564 <cleanup_stdio+0x34>)
 8000534:	4299      	cmp	r1, r3
 8000536:	b510      	push	{r4, lr}
 8000538:	4604      	mov	r4, r0
 800053a:	d001      	beq.n	8000540 <cleanup_stdio+0x10>
 800053c:	f000 fe82 	bl	8001244 <_fflush_r>
 8000540:	68a1      	ldr	r1, [r4, #8]
 8000542:	4b09      	ldr	r3, [pc, #36]	@ (8000568 <cleanup_stdio+0x38>)
 8000544:	4299      	cmp	r1, r3
 8000546:	d002      	beq.n	800054e <cleanup_stdio+0x1e>
 8000548:	4620      	mov	r0, r4
 800054a:	f000 fe7b 	bl	8001244 <_fflush_r>
 800054e:	68e1      	ldr	r1, [r4, #12]
 8000550:	4b06      	ldr	r3, [pc, #24]	@ (800056c <cleanup_stdio+0x3c>)
 8000552:	4299      	cmp	r1, r3
 8000554:	d004      	beq.n	8000560 <cleanup_stdio+0x30>
 8000556:	4620      	mov	r0, r4
 8000558:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800055c:	f000 be72 	b.w	8001244 <_fflush_r>
 8000560:	bd10      	pop	{r4, pc}
 8000562:	bf00      	nop
 8000564:	2000007c 	.word	0x2000007c
 8000568:	200000e4 	.word	0x200000e4
 800056c:	2000014c 	.word	0x2000014c

08000570 <global_stdio_init.part.0>:
 8000570:	b510      	push	{r4, lr}
 8000572:	4b0b      	ldr	r3, [pc, #44]	@ (80005a0 <global_stdio_init.part.0+0x30>)
 8000574:	4c0b      	ldr	r4, [pc, #44]	@ (80005a4 <global_stdio_init.part.0+0x34>)
 8000576:	4a0c      	ldr	r2, [pc, #48]	@ (80005a8 <global_stdio_init.part.0+0x38>)
 8000578:	601a      	str	r2, [r3, #0]
 800057a:	4620      	mov	r0, r4
 800057c:	2200      	movs	r2, #0
 800057e:	2104      	movs	r1, #4
 8000580:	f7ff ff94 	bl	80004ac <std>
 8000584:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000588:	2201      	movs	r2, #1
 800058a:	2109      	movs	r1, #9
 800058c:	f7ff ff8e 	bl	80004ac <std>
 8000590:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000594:	2202      	movs	r2, #2
 8000596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800059a:	2112      	movs	r1, #18
 800059c:	f7ff bf86 	b.w	80004ac <std>
 80005a0:	200001b4 	.word	0x200001b4
 80005a4:	2000007c 	.word	0x2000007c
 80005a8:	08000519 	.word	0x08000519

080005ac <__sfp_lock_acquire>:
 80005ac:	4801      	ldr	r0, [pc, #4]	@ (80005b4 <__sfp_lock_acquire+0x8>)
 80005ae:	f000 ba00 	b.w	80009b2 <__retarget_lock_acquire_recursive>
 80005b2:	bf00      	nop
 80005b4:	200001bd 	.word	0x200001bd

080005b8 <__sfp_lock_release>:
 80005b8:	4801      	ldr	r0, [pc, #4]	@ (80005c0 <__sfp_lock_release+0x8>)
 80005ba:	f000 b9fb 	b.w	80009b4 <__retarget_lock_release_recursive>
 80005be:	bf00      	nop
 80005c0:	200001bd 	.word	0x200001bd

080005c4 <__sinit>:
 80005c4:	b510      	push	{r4, lr}
 80005c6:	4604      	mov	r4, r0
 80005c8:	f7ff fff0 	bl	80005ac <__sfp_lock_acquire>
 80005cc:	6a23      	ldr	r3, [r4, #32]
 80005ce:	b11b      	cbz	r3, 80005d8 <__sinit+0x14>
 80005d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d4:	f7ff bff0 	b.w	80005b8 <__sfp_lock_release>
 80005d8:	4b04      	ldr	r3, [pc, #16]	@ (80005ec <__sinit+0x28>)
 80005da:	6223      	str	r3, [r4, #32]
 80005dc:	4b04      	ldr	r3, [pc, #16]	@ (80005f0 <__sinit+0x2c>)
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	2b00      	cmp	r3, #0
 80005e2:	d1f5      	bne.n	80005d0 <__sinit+0xc>
 80005e4:	f7ff ffc4 	bl	8000570 <global_stdio_init.part.0>
 80005e8:	e7f2      	b.n	80005d0 <__sinit+0xc>
 80005ea:	bf00      	nop
 80005ec:	08000531 	.word	0x08000531
 80005f0:	200001b4 	.word	0x200001b4

080005f4 <_fwalk_sglue>:
 80005f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005f8:	4607      	mov	r7, r0
 80005fa:	4688      	mov	r8, r1
 80005fc:	4614      	mov	r4, r2
 80005fe:	2600      	movs	r6, #0
 8000600:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000604:	f1b9 0901 	subs.w	r9, r9, #1
 8000608:	d505      	bpl.n	8000616 <_fwalk_sglue+0x22>
 800060a:	6824      	ldr	r4, [r4, #0]
 800060c:	2c00      	cmp	r4, #0
 800060e:	d1f7      	bne.n	8000600 <_fwalk_sglue+0xc>
 8000610:	4630      	mov	r0, r6
 8000612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000616:	89ab      	ldrh	r3, [r5, #12]
 8000618:	2b01      	cmp	r3, #1
 800061a:	d907      	bls.n	800062c <_fwalk_sglue+0x38>
 800061c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000620:	3301      	adds	r3, #1
 8000622:	d003      	beq.n	800062c <_fwalk_sglue+0x38>
 8000624:	4629      	mov	r1, r5
 8000626:	4638      	mov	r0, r7
 8000628:	47c0      	blx	r8
 800062a:	4306      	orrs	r6, r0
 800062c:	3568      	adds	r5, #104	@ 0x68
 800062e:	e7e9      	b.n	8000604 <_fwalk_sglue+0x10>

08000630 <iprintf>:
 8000630:	b40f      	push	{r0, r1, r2, r3}
 8000632:	b507      	push	{r0, r1, r2, lr}
 8000634:	4906      	ldr	r1, [pc, #24]	@ (8000650 <iprintf+0x20>)
 8000636:	ab04      	add	r3, sp, #16
 8000638:	6808      	ldr	r0, [r1, #0]
 800063a:	f853 2b04 	ldr.w	r2, [r3], #4
 800063e:	6881      	ldr	r1, [r0, #8]
 8000640:	9301      	str	r3, [sp, #4]
 8000642:	f000 fad9 	bl	8000bf8 <_vfiprintf_r>
 8000646:	b003      	add	sp, #12
 8000648:	f85d eb04 	ldr.w	lr, [sp], #4
 800064c:	b004      	add	sp, #16
 800064e:	4770      	bx	lr
 8000650:	2000000c 	.word	0x2000000c

08000654 <_puts_r>:
 8000654:	6a03      	ldr	r3, [r0, #32]
 8000656:	b570      	push	{r4, r5, r6, lr}
 8000658:	6884      	ldr	r4, [r0, #8]
 800065a:	4605      	mov	r5, r0
 800065c:	460e      	mov	r6, r1
 800065e:	b90b      	cbnz	r3, 8000664 <_puts_r+0x10>
 8000660:	f7ff ffb0 	bl	80005c4 <__sinit>
 8000664:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000666:	07db      	lsls	r3, r3, #31
 8000668:	d405      	bmi.n	8000676 <_puts_r+0x22>
 800066a:	89a3      	ldrh	r3, [r4, #12]
 800066c:	0598      	lsls	r0, r3, #22
 800066e:	d402      	bmi.n	8000676 <_puts_r+0x22>
 8000670:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000672:	f000 f99e 	bl	80009b2 <__retarget_lock_acquire_recursive>
 8000676:	89a3      	ldrh	r3, [r4, #12]
 8000678:	0719      	lsls	r1, r3, #28
 800067a:	d502      	bpl.n	8000682 <_puts_r+0x2e>
 800067c:	6923      	ldr	r3, [r4, #16]
 800067e:	2b00      	cmp	r3, #0
 8000680:	d135      	bne.n	80006ee <_puts_r+0x9a>
 8000682:	4621      	mov	r1, r4
 8000684:	4628      	mov	r0, r5
 8000686:	f000 f8c5 	bl	8000814 <__swsetup_r>
 800068a:	b380      	cbz	r0, 80006ee <_puts_r+0x9a>
 800068c:	f04f 35ff 	mov.w	r5, #4294967295
 8000690:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000692:	07da      	lsls	r2, r3, #31
 8000694:	d405      	bmi.n	80006a2 <_puts_r+0x4e>
 8000696:	89a3      	ldrh	r3, [r4, #12]
 8000698:	059b      	lsls	r3, r3, #22
 800069a:	d402      	bmi.n	80006a2 <_puts_r+0x4e>
 800069c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800069e:	f000 f989 	bl	80009b4 <__retarget_lock_release_recursive>
 80006a2:	4628      	mov	r0, r5
 80006a4:	bd70      	pop	{r4, r5, r6, pc}
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	da04      	bge.n	80006b4 <_puts_r+0x60>
 80006aa:	69a2      	ldr	r2, [r4, #24]
 80006ac:	429a      	cmp	r2, r3
 80006ae:	dc17      	bgt.n	80006e0 <_puts_r+0x8c>
 80006b0:	290a      	cmp	r1, #10
 80006b2:	d015      	beq.n	80006e0 <_puts_r+0x8c>
 80006b4:	6823      	ldr	r3, [r4, #0]
 80006b6:	1c5a      	adds	r2, r3, #1
 80006b8:	6022      	str	r2, [r4, #0]
 80006ba:	7019      	strb	r1, [r3, #0]
 80006bc:	68a3      	ldr	r3, [r4, #8]
 80006be:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006c2:	3b01      	subs	r3, #1
 80006c4:	60a3      	str	r3, [r4, #8]
 80006c6:	2900      	cmp	r1, #0
 80006c8:	d1ed      	bne.n	80006a6 <_puts_r+0x52>
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	da11      	bge.n	80006f2 <_puts_r+0x9e>
 80006ce:	4622      	mov	r2, r4
 80006d0:	210a      	movs	r1, #10
 80006d2:	4628      	mov	r0, r5
 80006d4:	f000 f85f 	bl	8000796 <__swbuf_r>
 80006d8:	3001      	adds	r0, #1
 80006da:	d0d7      	beq.n	800068c <_puts_r+0x38>
 80006dc:	250a      	movs	r5, #10
 80006de:	e7d7      	b.n	8000690 <_puts_r+0x3c>
 80006e0:	4622      	mov	r2, r4
 80006e2:	4628      	mov	r0, r5
 80006e4:	f000 f857 	bl	8000796 <__swbuf_r>
 80006e8:	3001      	adds	r0, #1
 80006ea:	d1e7      	bne.n	80006bc <_puts_r+0x68>
 80006ec:	e7ce      	b.n	800068c <_puts_r+0x38>
 80006ee:	3e01      	subs	r6, #1
 80006f0:	e7e4      	b.n	80006bc <_puts_r+0x68>
 80006f2:	6823      	ldr	r3, [r4, #0]
 80006f4:	1c5a      	adds	r2, r3, #1
 80006f6:	6022      	str	r2, [r4, #0]
 80006f8:	220a      	movs	r2, #10
 80006fa:	701a      	strb	r2, [r3, #0]
 80006fc:	e7ee      	b.n	80006dc <_puts_r+0x88>
	...

08000700 <puts>:
 8000700:	4b02      	ldr	r3, [pc, #8]	@ (800070c <puts+0xc>)
 8000702:	4601      	mov	r1, r0
 8000704:	6818      	ldr	r0, [r3, #0]
 8000706:	f7ff bfa5 	b.w	8000654 <_puts_r>
 800070a:	bf00      	nop
 800070c:	2000000c 	.word	0x2000000c

08000710 <__sread>:
 8000710:	b510      	push	{r4, lr}
 8000712:	460c      	mov	r4, r1
 8000714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000718:	f000 f8fc 	bl	8000914 <_read_r>
 800071c:	2800      	cmp	r0, #0
 800071e:	bfab      	itete	ge
 8000720:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000722:	89a3      	ldrhlt	r3, [r4, #12]
 8000724:	181b      	addge	r3, r3, r0
 8000726:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800072a:	bfac      	ite	ge
 800072c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800072e:	81a3      	strhlt	r3, [r4, #12]
 8000730:	bd10      	pop	{r4, pc}

08000732 <__swrite>:
 8000732:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000736:	461f      	mov	r7, r3
 8000738:	898b      	ldrh	r3, [r1, #12]
 800073a:	05db      	lsls	r3, r3, #23
 800073c:	4605      	mov	r5, r0
 800073e:	460c      	mov	r4, r1
 8000740:	4616      	mov	r6, r2
 8000742:	d505      	bpl.n	8000750 <__swrite+0x1e>
 8000744:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000748:	2302      	movs	r3, #2
 800074a:	2200      	movs	r2, #0
 800074c:	f000 f8d0 	bl	80008f0 <_lseek_r>
 8000750:	89a3      	ldrh	r3, [r4, #12]
 8000752:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000756:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800075a:	81a3      	strh	r3, [r4, #12]
 800075c:	4632      	mov	r2, r6
 800075e:	463b      	mov	r3, r7
 8000760:	4628      	mov	r0, r5
 8000762:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000766:	f000 b8e7 	b.w	8000938 <_write_r>

0800076a <__sseek>:
 800076a:	b510      	push	{r4, lr}
 800076c:	460c      	mov	r4, r1
 800076e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000772:	f000 f8bd 	bl	80008f0 <_lseek_r>
 8000776:	1c43      	adds	r3, r0, #1
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	bf15      	itete	ne
 800077c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800077e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000782:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000786:	81a3      	strheq	r3, [r4, #12]
 8000788:	bf18      	it	ne
 800078a:	81a3      	strhne	r3, [r4, #12]
 800078c:	bd10      	pop	{r4, pc}

0800078e <__sclose>:
 800078e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000792:	f000 b89d 	b.w	80008d0 <_close_r>

08000796 <__swbuf_r>:
 8000796:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000798:	460e      	mov	r6, r1
 800079a:	4614      	mov	r4, r2
 800079c:	4605      	mov	r5, r0
 800079e:	b118      	cbz	r0, 80007a8 <__swbuf_r+0x12>
 80007a0:	6a03      	ldr	r3, [r0, #32]
 80007a2:	b90b      	cbnz	r3, 80007a8 <__swbuf_r+0x12>
 80007a4:	f7ff ff0e 	bl	80005c4 <__sinit>
 80007a8:	69a3      	ldr	r3, [r4, #24]
 80007aa:	60a3      	str	r3, [r4, #8]
 80007ac:	89a3      	ldrh	r3, [r4, #12]
 80007ae:	071a      	lsls	r2, r3, #28
 80007b0:	d501      	bpl.n	80007b6 <__swbuf_r+0x20>
 80007b2:	6923      	ldr	r3, [r4, #16]
 80007b4:	b943      	cbnz	r3, 80007c8 <__swbuf_r+0x32>
 80007b6:	4621      	mov	r1, r4
 80007b8:	4628      	mov	r0, r5
 80007ba:	f000 f82b 	bl	8000814 <__swsetup_r>
 80007be:	b118      	cbz	r0, 80007c8 <__swbuf_r+0x32>
 80007c0:	f04f 37ff 	mov.w	r7, #4294967295
 80007c4:	4638      	mov	r0, r7
 80007c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007c8:	6823      	ldr	r3, [r4, #0]
 80007ca:	6922      	ldr	r2, [r4, #16]
 80007cc:	1a98      	subs	r0, r3, r2
 80007ce:	6963      	ldr	r3, [r4, #20]
 80007d0:	b2f6      	uxtb	r6, r6
 80007d2:	4283      	cmp	r3, r0
 80007d4:	4637      	mov	r7, r6
 80007d6:	dc05      	bgt.n	80007e4 <__swbuf_r+0x4e>
 80007d8:	4621      	mov	r1, r4
 80007da:	4628      	mov	r0, r5
 80007dc:	f000 fd32 	bl	8001244 <_fflush_r>
 80007e0:	2800      	cmp	r0, #0
 80007e2:	d1ed      	bne.n	80007c0 <__swbuf_r+0x2a>
 80007e4:	68a3      	ldr	r3, [r4, #8]
 80007e6:	3b01      	subs	r3, #1
 80007e8:	60a3      	str	r3, [r4, #8]
 80007ea:	6823      	ldr	r3, [r4, #0]
 80007ec:	1c5a      	adds	r2, r3, #1
 80007ee:	6022      	str	r2, [r4, #0]
 80007f0:	701e      	strb	r6, [r3, #0]
 80007f2:	6962      	ldr	r2, [r4, #20]
 80007f4:	1c43      	adds	r3, r0, #1
 80007f6:	429a      	cmp	r2, r3
 80007f8:	d004      	beq.n	8000804 <__swbuf_r+0x6e>
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	07db      	lsls	r3, r3, #31
 80007fe:	d5e1      	bpl.n	80007c4 <__swbuf_r+0x2e>
 8000800:	2e0a      	cmp	r6, #10
 8000802:	d1df      	bne.n	80007c4 <__swbuf_r+0x2e>
 8000804:	4621      	mov	r1, r4
 8000806:	4628      	mov	r0, r5
 8000808:	f000 fd1c 	bl	8001244 <_fflush_r>
 800080c:	2800      	cmp	r0, #0
 800080e:	d0d9      	beq.n	80007c4 <__swbuf_r+0x2e>
 8000810:	e7d6      	b.n	80007c0 <__swbuf_r+0x2a>
	...

08000814 <__swsetup_r>:
 8000814:	b538      	push	{r3, r4, r5, lr}
 8000816:	4b29      	ldr	r3, [pc, #164]	@ (80008bc <__swsetup_r+0xa8>)
 8000818:	4605      	mov	r5, r0
 800081a:	6818      	ldr	r0, [r3, #0]
 800081c:	460c      	mov	r4, r1
 800081e:	b118      	cbz	r0, 8000828 <__swsetup_r+0x14>
 8000820:	6a03      	ldr	r3, [r0, #32]
 8000822:	b90b      	cbnz	r3, 8000828 <__swsetup_r+0x14>
 8000824:	f7ff fece 	bl	80005c4 <__sinit>
 8000828:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800082c:	0719      	lsls	r1, r3, #28
 800082e:	d422      	bmi.n	8000876 <__swsetup_r+0x62>
 8000830:	06da      	lsls	r2, r3, #27
 8000832:	d407      	bmi.n	8000844 <__swsetup_r+0x30>
 8000834:	2209      	movs	r2, #9
 8000836:	602a      	str	r2, [r5, #0]
 8000838:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800083c:	81a3      	strh	r3, [r4, #12]
 800083e:	f04f 30ff 	mov.w	r0, #4294967295
 8000842:	e033      	b.n	80008ac <__swsetup_r+0x98>
 8000844:	0758      	lsls	r0, r3, #29
 8000846:	d512      	bpl.n	800086e <__swsetup_r+0x5a>
 8000848:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800084a:	b141      	cbz	r1, 800085e <__swsetup_r+0x4a>
 800084c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000850:	4299      	cmp	r1, r3
 8000852:	d002      	beq.n	800085a <__swsetup_r+0x46>
 8000854:	4628      	mov	r0, r5
 8000856:	f000 f8af 	bl	80009b8 <_free_r>
 800085a:	2300      	movs	r3, #0
 800085c:	6363      	str	r3, [r4, #52]	@ 0x34
 800085e:	89a3      	ldrh	r3, [r4, #12]
 8000860:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000864:	81a3      	strh	r3, [r4, #12]
 8000866:	2300      	movs	r3, #0
 8000868:	6063      	str	r3, [r4, #4]
 800086a:	6923      	ldr	r3, [r4, #16]
 800086c:	6023      	str	r3, [r4, #0]
 800086e:	89a3      	ldrh	r3, [r4, #12]
 8000870:	f043 0308 	orr.w	r3, r3, #8
 8000874:	81a3      	strh	r3, [r4, #12]
 8000876:	6923      	ldr	r3, [r4, #16]
 8000878:	b94b      	cbnz	r3, 800088e <__swsetup_r+0x7a>
 800087a:	89a3      	ldrh	r3, [r4, #12]
 800087c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000880:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000884:	d003      	beq.n	800088e <__swsetup_r+0x7a>
 8000886:	4621      	mov	r1, r4
 8000888:	4628      	mov	r0, r5
 800088a:	f000 fd29 	bl	80012e0 <__smakebuf_r>
 800088e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000892:	f013 0201 	ands.w	r2, r3, #1
 8000896:	d00a      	beq.n	80008ae <__swsetup_r+0x9a>
 8000898:	2200      	movs	r2, #0
 800089a:	60a2      	str	r2, [r4, #8]
 800089c:	6962      	ldr	r2, [r4, #20]
 800089e:	4252      	negs	r2, r2
 80008a0:	61a2      	str	r2, [r4, #24]
 80008a2:	6922      	ldr	r2, [r4, #16]
 80008a4:	b942      	cbnz	r2, 80008b8 <__swsetup_r+0xa4>
 80008a6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80008aa:	d1c5      	bne.n	8000838 <__swsetup_r+0x24>
 80008ac:	bd38      	pop	{r3, r4, r5, pc}
 80008ae:	0799      	lsls	r1, r3, #30
 80008b0:	bf58      	it	pl
 80008b2:	6962      	ldrpl	r2, [r4, #20]
 80008b4:	60a2      	str	r2, [r4, #8]
 80008b6:	e7f4      	b.n	80008a2 <__swsetup_r+0x8e>
 80008b8:	2000      	movs	r0, #0
 80008ba:	e7f7      	b.n	80008ac <__swsetup_r+0x98>
 80008bc:	2000000c 	.word	0x2000000c

080008c0 <memset>:
 80008c0:	4402      	add	r2, r0
 80008c2:	4603      	mov	r3, r0
 80008c4:	4293      	cmp	r3, r2
 80008c6:	d100      	bne.n	80008ca <memset+0xa>
 80008c8:	4770      	bx	lr
 80008ca:	f803 1b01 	strb.w	r1, [r3], #1
 80008ce:	e7f9      	b.n	80008c4 <memset+0x4>

080008d0 <_close_r>:
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4d06      	ldr	r5, [pc, #24]	@ (80008ec <_close_r+0x1c>)
 80008d4:	2300      	movs	r3, #0
 80008d6:	4604      	mov	r4, r0
 80008d8:	4608      	mov	r0, r1
 80008da:	602b      	str	r3, [r5, #0]
 80008dc:	f7ff fd55 	bl	800038a <_close>
 80008e0:	1c43      	adds	r3, r0, #1
 80008e2:	d102      	bne.n	80008ea <_close_r+0x1a>
 80008e4:	682b      	ldr	r3, [r5, #0]
 80008e6:	b103      	cbz	r3, 80008ea <_close_r+0x1a>
 80008e8:	6023      	str	r3, [r4, #0]
 80008ea:	bd38      	pop	{r3, r4, r5, pc}
 80008ec:	200001b8 	.word	0x200001b8

080008f0 <_lseek_r>:
 80008f0:	b538      	push	{r3, r4, r5, lr}
 80008f2:	4d07      	ldr	r5, [pc, #28]	@ (8000910 <_lseek_r+0x20>)
 80008f4:	4604      	mov	r4, r0
 80008f6:	4608      	mov	r0, r1
 80008f8:	4611      	mov	r1, r2
 80008fa:	2200      	movs	r2, #0
 80008fc:	602a      	str	r2, [r5, #0]
 80008fe:	461a      	mov	r2, r3
 8000900:	f7ff fd67 	bl	80003d2 <_lseek>
 8000904:	1c43      	adds	r3, r0, #1
 8000906:	d102      	bne.n	800090e <_lseek_r+0x1e>
 8000908:	682b      	ldr	r3, [r5, #0]
 800090a:	b103      	cbz	r3, 800090e <_lseek_r+0x1e>
 800090c:	6023      	str	r3, [r4, #0]
 800090e:	bd38      	pop	{r3, r4, r5, pc}
 8000910:	200001b8 	.word	0x200001b8

08000914 <_read_r>:
 8000914:	b538      	push	{r3, r4, r5, lr}
 8000916:	4d07      	ldr	r5, [pc, #28]	@ (8000934 <_read_r+0x20>)
 8000918:	4604      	mov	r4, r0
 800091a:	4608      	mov	r0, r1
 800091c:	4611      	mov	r1, r2
 800091e:	2200      	movs	r2, #0
 8000920:	602a      	str	r2, [r5, #0]
 8000922:	461a      	mov	r2, r3
 8000924:	f7ff fcf8 	bl	8000318 <_read>
 8000928:	1c43      	adds	r3, r0, #1
 800092a:	d102      	bne.n	8000932 <_read_r+0x1e>
 800092c:	682b      	ldr	r3, [r5, #0]
 800092e:	b103      	cbz	r3, 8000932 <_read_r+0x1e>
 8000930:	6023      	str	r3, [r4, #0]
 8000932:	bd38      	pop	{r3, r4, r5, pc}
 8000934:	200001b8 	.word	0x200001b8

08000938 <_write_r>:
 8000938:	b538      	push	{r3, r4, r5, lr}
 800093a:	4d07      	ldr	r5, [pc, #28]	@ (8000958 <_write_r+0x20>)
 800093c:	4604      	mov	r4, r0
 800093e:	4608      	mov	r0, r1
 8000940:	4611      	mov	r1, r2
 8000942:	2200      	movs	r2, #0
 8000944:	602a      	str	r2, [r5, #0]
 8000946:	461a      	mov	r2, r3
 8000948:	f7ff fd03 	bl	8000352 <_write>
 800094c:	1c43      	adds	r3, r0, #1
 800094e:	d102      	bne.n	8000956 <_write_r+0x1e>
 8000950:	682b      	ldr	r3, [r5, #0]
 8000952:	b103      	cbz	r3, 8000956 <_write_r+0x1e>
 8000954:	6023      	str	r3, [r4, #0]
 8000956:	bd38      	pop	{r3, r4, r5, pc}
 8000958:	200001b8 	.word	0x200001b8

0800095c <__errno>:
 800095c:	4b01      	ldr	r3, [pc, #4]	@ (8000964 <__errno+0x8>)
 800095e:	6818      	ldr	r0, [r3, #0]
 8000960:	4770      	bx	lr
 8000962:	bf00      	nop
 8000964:	2000000c 	.word	0x2000000c

08000968 <__libc_init_array>:
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	4d0d      	ldr	r5, [pc, #52]	@ (80009a0 <__libc_init_array+0x38>)
 800096c:	4c0d      	ldr	r4, [pc, #52]	@ (80009a4 <__libc_init_array+0x3c>)
 800096e:	1b64      	subs	r4, r4, r5
 8000970:	10a4      	asrs	r4, r4, #2
 8000972:	2600      	movs	r6, #0
 8000974:	42a6      	cmp	r6, r4
 8000976:	d109      	bne.n	800098c <__libc_init_array+0x24>
 8000978:	4d0b      	ldr	r5, [pc, #44]	@ (80009a8 <__libc_init_array+0x40>)
 800097a:	4c0c      	ldr	r4, [pc, #48]	@ (80009ac <__libc_init_array+0x44>)
 800097c:	f000 fd1e 	bl	80013bc <_init>
 8000980:	1b64      	subs	r4, r4, r5
 8000982:	10a4      	asrs	r4, r4, #2
 8000984:	2600      	movs	r6, #0
 8000986:	42a6      	cmp	r6, r4
 8000988:	d105      	bne.n	8000996 <__libc_init_array+0x2e>
 800098a:	bd70      	pop	{r4, r5, r6, pc}
 800098c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000990:	4798      	blx	r3
 8000992:	3601      	adds	r6, #1
 8000994:	e7ee      	b.n	8000974 <__libc_init_array+0xc>
 8000996:	f855 3b04 	ldr.w	r3, [r5], #4
 800099a:	4798      	blx	r3
 800099c:	3601      	adds	r6, #1
 800099e:	e7f2      	b.n	8000986 <__libc_init_array+0x1e>
 80009a0:	080014ac 	.word	0x080014ac
 80009a4:	080014ac 	.word	0x080014ac
 80009a8:	080014ac 	.word	0x080014ac
 80009ac:	080014b0 	.word	0x080014b0

080009b0 <__retarget_lock_init_recursive>:
 80009b0:	4770      	bx	lr

080009b2 <__retarget_lock_acquire_recursive>:
 80009b2:	4770      	bx	lr

080009b4 <__retarget_lock_release_recursive>:
 80009b4:	4770      	bx	lr
	...

080009b8 <_free_r>:
 80009b8:	b538      	push	{r3, r4, r5, lr}
 80009ba:	4605      	mov	r5, r0
 80009bc:	2900      	cmp	r1, #0
 80009be:	d041      	beq.n	8000a44 <_free_r+0x8c>
 80009c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009c4:	1f0c      	subs	r4, r1, #4
 80009c6:	2b00      	cmp	r3, #0
 80009c8:	bfb8      	it	lt
 80009ca:	18e4      	addlt	r4, r4, r3
 80009cc:	f000 f8e0 	bl	8000b90 <__malloc_lock>
 80009d0:	4a1d      	ldr	r2, [pc, #116]	@ (8000a48 <_free_r+0x90>)
 80009d2:	6813      	ldr	r3, [r2, #0]
 80009d4:	b933      	cbnz	r3, 80009e4 <_free_r+0x2c>
 80009d6:	6063      	str	r3, [r4, #4]
 80009d8:	6014      	str	r4, [r2, #0]
 80009da:	4628      	mov	r0, r5
 80009dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009e0:	f000 b8dc 	b.w	8000b9c <__malloc_unlock>
 80009e4:	42a3      	cmp	r3, r4
 80009e6:	d908      	bls.n	80009fa <_free_r+0x42>
 80009e8:	6820      	ldr	r0, [r4, #0]
 80009ea:	1821      	adds	r1, r4, r0
 80009ec:	428b      	cmp	r3, r1
 80009ee:	bf01      	itttt	eq
 80009f0:	6819      	ldreq	r1, [r3, #0]
 80009f2:	685b      	ldreq	r3, [r3, #4]
 80009f4:	1809      	addeq	r1, r1, r0
 80009f6:	6021      	streq	r1, [r4, #0]
 80009f8:	e7ed      	b.n	80009d6 <_free_r+0x1e>
 80009fa:	461a      	mov	r2, r3
 80009fc:	685b      	ldr	r3, [r3, #4]
 80009fe:	b10b      	cbz	r3, 8000a04 <_free_r+0x4c>
 8000a00:	42a3      	cmp	r3, r4
 8000a02:	d9fa      	bls.n	80009fa <_free_r+0x42>
 8000a04:	6811      	ldr	r1, [r2, #0]
 8000a06:	1850      	adds	r0, r2, r1
 8000a08:	42a0      	cmp	r0, r4
 8000a0a:	d10b      	bne.n	8000a24 <_free_r+0x6c>
 8000a0c:	6820      	ldr	r0, [r4, #0]
 8000a0e:	4401      	add	r1, r0
 8000a10:	1850      	adds	r0, r2, r1
 8000a12:	4283      	cmp	r3, r0
 8000a14:	6011      	str	r1, [r2, #0]
 8000a16:	d1e0      	bne.n	80009da <_free_r+0x22>
 8000a18:	6818      	ldr	r0, [r3, #0]
 8000a1a:	685b      	ldr	r3, [r3, #4]
 8000a1c:	6053      	str	r3, [r2, #4]
 8000a1e:	4408      	add	r0, r1
 8000a20:	6010      	str	r0, [r2, #0]
 8000a22:	e7da      	b.n	80009da <_free_r+0x22>
 8000a24:	d902      	bls.n	8000a2c <_free_r+0x74>
 8000a26:	230c      	movs	r3, #12
 8000a28:	602b      	str	r3, [r5, #0]
 8000a2a:	e7d6      	b.n	80009da <_free_r+0x22>
 8000a2c:	6820      	ldr	r0, [r4, #0]
 8000a2e:	1821      	adds	r1, r4, r0
 8000a30:	428b      	cmp	r3, r1
 8000a32:	bf04      	itt	eq
 8000a34:	6819      	ldreq	r1, [r3, #0]
 8000a36:	685b      	ldreq	r3, [r3, #4]
 8000a38:	6063      	str	r3, [r4, #4]
 8000a3a:	bf04      	itt	eq
 8000a3c:	1809      	addeq	r1, r1, r0
 8000a3e:	6021      	streq	r1, [r4, #0]
 8000a40:	6054      	str	r4, [r2, #4]
 8000a42:	e7ca      	b.n	80009da <_free_r+0x22>
 8000a44:	bd38      	pop	{r3, r4, r5, pc}
 8000a46:	bf00      	nop
 8000a48:	200001c4 	.word	0x200001c4

08000a4c <sbrk_aligned>:
 8000a4c:	b570      	push	{r4, r5, r6, lr}
 8000a4e:	4e0f      	ldr	r6, [pc, #60]	@ (8000a8c <sbrk_aligned+0x40>)
 8000a50:	460c      	mov	r4, r1
 8000a52:	6831      	ldr	r1, [r6, #0]
 8000a54:	4605      	mov	r5, r0
 8000a56:	b911      	cbnz	r1, 8000a5e <sbrk_aligned+0x12>
 8000a58:	f000 fca0 	bl	800139c <_sbrk_r>
 8000a5c:	6030      	str	r0, [r6, #0]
 8000a5e:	4621      	mov	r1, r4
 8000a60:	4628      	mov	r0, r5
 8000a62:	f000 fc9b 	bl	800139c <_sbrk_r>
 8000a66:	1c43      	adds	r3, r0, #1
 8000a68:	d103      	bne.n	8000a72 <sbrk_aligned+0x26>
 8000a6a:	f04f 34ff 	mov.w	r4, #4294967295
 8000a6e:	4620      	mov	r0, r4
 8000a70:	bd70      	pop	{r4, r5, r6, pc}
 8000a72:	1cc4      	adds	r4, r0, #3
 8000a74:	f024 0403 	bic.w	r4, r4, #3
 8000a78:	42a0      	cmp	r0, r4
 8000a7a:	d0f8      	beq.n	8000a6e <sbrk_aligned+0x22>
 8000a7c:	1a21      	subs	r1, r4, r0
 8000a7e:	4628      	mov	r0, r5
 8000a80:	f000 fc8c 	bl	800139c <_sbrk_r>
 8000a84:	3001      	adds	r0, #1
 8000a86:	d1f2      	bne.n	8000a6e <sbrk_aligned+0x22>
 8000a88:	e7ef      	b.n	8000a6a <sbrk_aligned+0x1e>
 8000a8a:	bf00      	nop
 8000a8c:	200001c0 	.word	0x200001c0

08000a90 <_malloc_r>:
 8000a90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a94:	1ccd      	adds	r5, r1, #3
 8000a96:	f025 0503 	bic.w	r5, r5, #3
 8000a9a:	3508      	adds	r5, #8
 8000a9c:	2d0c      	cmp	r5, #12
 8000a9e:	bf38      	it	cc
 8000aa0:	250c      	movcc	r5, #12
 8000aa2:	2d00      	cmp	r5, #0
 8000aa4:	4606      	mov	r6, r0
 8000aa6:	db01      	blt.n	8000aac <_malloc_r+0x1c>
 8000aa8:	42a9      	cmp	r1, r5
 8000aaa:	d904      	bls.n	8000ab6 <_malloc_r+0x26>
 8000aac:	230c      	movs	r3, #12
 8000aae:	6033      	str	r3, [r6, #0]
 8000ab0:	2000      	movs	r0, #0
 8000ab2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ab6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b8c <_malloc_r+0xfc>
 8000aba:	f000 f869 	bl	8000b90 <__malloc_lock>
 8000abe:	f8d8 3000 	ldr.w	r3, [r8]
 8000ac2:	461c      	mov	r4, r3
 8000ac4:	bb44      	cbnz	r4, 8000b18 <_malloc_r+0x88>
 8000ac6:	4629      	mov	r1, r5
 8000ac8:	4630      	mov	r0, r6
 8000aca:	f7ff ffbf 	bl	8000a4c <sbrk_aligned>
 8000ace:	1c43      	adds	r3, r0, #1
 8000ad0:	4604      	mov	r4, r0
 8000ad2:	d158      	bne.n	8000b86 <_malloc_r+0xf6>
 8000ad4:	f8d8 4000 	ldr.w	r4, [r8]
 8000ad8:	4627      	mov	r7, r4
 8000ada:	2f00      	cmp	r7, #0
 8000adc:	d143      	bne.n	8000b66 <_malloc_r+0xd6>
 8000ade:	2c00      	cmp	r4, #0
 8000ae0:	d04b      	beq.n	8000b7a <_malloc_r+0xea>
 8000ae2:	6823      	ldr	r3, [r4, #0]
 8000ae4:	4639      	mov	r1, r7
 8000ae6:	4630      	mov	r0, r6
 8000ae8:	eb04 0903 	add.w	r9, r4, r3
 8000aec:	f000 fc56 	bl	800139c <_sbrk_r>
 8000af0:	4581      	cmp	r9, r0
 8000af2:	d142      	bne.n	8000b7a <_malloc_r+0xea>
 8000af4:	6821      	ldr	r1, [r4, #0]
 8000af6:	1a6d      	subs	r5, r5, r1
 8000af8:	4629      	mov	r1, r5
 8000afa:	4630      	mov	r0, r6
 8000afc:	f7ff ffa6 	bl	8000a4c <sbrk_aligned>
 8000b00:	3001      	adds	r0, #1
 8000b02:	d03a      	beq.n	8000b7a <_malloc_r+0xea>
 8000b04:	6823      	ldr	r3, [r4, #0]
 8000b06:	442b      	add	r3, r5
 8000b08:	6023      	str	r3, [r4, #0]
 8000b0a:	f8d8 3000 	ldr.w	r3, [r8]
 8000b0e:	685a      	ldr	r2, [r3, #4]
 8000b10:	bb62      	cbnz	r2, 8000b6c <_malloc_r+0xdc>
 8000b12:	f8c8 7000 	str.w	r7, [r8]
 8000b16:	e00f      	b.n	8000b38 <_malloc_r+0xa8>
 8000b18:	6822      	ldr	r2, [r4, #0]
 8000b1a:	1b52      	subs	r2, r2, r5
 8000b1c:	d420      	bmi.n	8000b60 <_malloc_r+0xd0>
 8000b1e:	2a0b      	cmp	r2, #11
 8000b20:	d917      	bls.n	8000b52 <_malloc_r+0xc2>
 8000b22:	1961      	adds	r1, r4, r5
 8000b24:	42a3      	cmp	r3, r4
 8000b26:	6025      	str	r5, [r4, #0]
 8000b28:	bf18      	it	ne
 8000b2a:	6059      	strne	r1, [r3, #4]
 8000b2c:	6863      	ldr	r3, [r4, #4]
 8000b2e:	bf08      	it	eq
 8000b30:	f8c8 1000 	streq.w	r1, [r8]
 8000b34:	5162      	str	r2, [r4, r5]
 8000b36:	604b      	str	r3, [r1, #4]
 8000b38:	4630      	mov	r0, r6
 8000b3a:	f000 f82f 	bl	8000b9c <__malloc_unlock>
 8000b3e:	f104 000b 	add.w	r0, r4, #11
 8000b42:	1d23      	adds	r3, r4, #4
 8000b44:	f020 0007 	bic.w	r0, r0, #7
 8000b48:	1ac2      	subs	r2, r0, r3
 8000b4a:	bf1c      	itt	ne
 8000b4c:	1a1b      	subne	r3, r3, r0
 8000b4e:	50a3      	strne	r3, [r4, r2]
 8000b50:	e7af      	b.n	8000ab2 <_malloc_r+0x22>
 8000b52:	6862      	ldr	r2, [r4, #4]
 8000b54:	42a3      	cmp	r3, r4
 8000b56:	bf0c      	ite	eq
 8000b58:	f8c8 2000 	streq.w	r2, [r8]
 8000b5c:	605a      	strne	r2, [r3, #4]
 8000b5e:	e7eb      	b.n	8000b38 <_malloc_r+0xa8>
 8000b60:	4623      	mov	r3, r4
 8000b62:	6864      	ldr	r4, [r4, #4]
 8000b64:	e7ae      	b.n	8000ac4 <_malloc_r+0x34>
 8000b66:	463c      	mov	r4, r7
 8000b68:	687f      	ldr	r7, [r7, #4]
 8000b6a:	e7b6      	b.n	8000ada <_malloc_r+0x4a>
 8000b6c:	461a      	mov	r2, r3
 8000b6e:	685b      	ldr	r3, [r3, #4]
 8000b70:	42a3      	cmp	r3, r4
 8000b72:	d1fb      	bne.n	8000b6c <_malloc_r+0xdc>
 8000b74:	2300      	movs	r3, #0
 8000b76:	6053      	str	r3, [r2, #4]
 8000b78:	e7de      	b.n	8000b38 <_malloc_r+0xa8>
 8000b7a:	230c      	movs	r3, #12
 8000b7c:	6033      	str	r3, [r6, #0]
 8000b7e:	4630      	mov	r0, r6
 8000b80:	f000 f80c 	bl	8000b9c <__malloc_unlock>
 8000b84:	e794      	b.n	8000ab0 <_malloc_r+0x20>
 8000b86:	6005      	str	r5, [r0, #0]
 8000b88:	e7d6      	b.n	8000b38 <_malloc_r+0xa8>
 8000b8a:	bf00      	nop
 8000b8c:	200001c4 	.word	0x200001c4

08000b90 <__malloc_lock>:
 8000b90:	4801      	ldr	r0, [pc, #4]	@ (8000b98 <__malloc_lock+0x8>)
 8000b92:	f7ff bf0e 	b.w	80009b2 <__retarget_lock_acquire_recursive>
 8000b96:	bf00      	nop
 8000b98:	200001bc 	.word	0x200001bc

08000b9c <__malloc_unlock>:
 8000b9c:	4801      	ldr	r0, [pc, #4]	@ (8000ba4 <__malloc_unlock+0x8>)
 8000b9e:	f7ff bf09 	b.w	80009b4 <__retarget_lock_release_recursive>
 8000ba2:	bf00      	nop
 8000ba4:	200001bc 	.word	0x200001bc

08000ba8 <__sfputc_r>:
 8000ba8:	6893      	ldr	r3, [r2, #8]
 8000baa:	3b01      	subs	r3, #1
 8000bac:	2b00      	cmp	r3, #0
 8000bae:	b410      	push	{r4}
 8000bb0:	6093      	str	r3, [r2, #8]
 8000bb2:	da07      	bge.n	8000bc4 <__sfputc_r+0x1c>
 8000bb4:	6994      	ldr	r4, [r2, #24]
 8000bb6:	42a3      	cmp	r3, r4
 8000bb8:	db01      	blt.n	8000bbe <__sfputc_r+0x16>
 8000bba:	290a      	cmp	r1, #10
 8000bbc:	d102      	bne.n	8000bc4 <__sfputc_r+0x1c>
 8000bbe:	bc10      	pop	{r4}
 8000bc0:	f7ff bde9 	b.w	8000796 <__swbuf_r>
 8000bc4:	6813      	ldr	r3, [r2, #0]
 8000bc6:	1c58      	adds	r0, r3, #1
 8000bc8:	6010      	str	r0, [r2, #0]
 8000bca:	7019      	strb	r1, [r3, #0]
 8000bcc:	4608      	mov	r0, r1
 8000bce:	bc10      	pop	{r4}
 8000bd0:	4770      	bx	lr

08000bd2 <__sfputs_r>:
 8000bd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bd4:	4606      	mov	r6, r0
 8000bd6:	460f      	mov	r7, r1
 8000bd8:	4614      	mov	r4, r2
 8000bda:	18d5      	adds	r5, r2, r3
 8000bdc:	42ac      	cmp	r4, r5
 8000bde:	d101      	bne.n	8000be4 <__sfputs_r+0x12>
 8000be0:	2000      	movs	r0, #0
 8000be2:	e007      	b.n	8000bf4 <__sfputs_r+0x22>
 8000be4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000be8:	463a      	mov	r2, r7
 8000bea:	4630      	mov	r0, r6
 8000bec:	f7ff ffdc 	bl	8000ba8 <__sfputc_r>
 8000bf0:	1c43      	adds	r3, r0, #1
 8000bf2:	d1f3      	bne.n	8000bdc <__sfputs_r+0xa>
 8000bf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bf8 <_vfiprintf_r>:
 8000bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bfc:	460d      	mov	r5, r1
 8000bfe:	b09d      	sub	sp, #116	@ 0x74
 8000c00:	4614      	mov	r4, r2
 8000c02:	4698      	mov	r8, r3
 8000c04:	4606      	mov	r6, r0
 8000c06:	b118      	cbz	r0, 8000c10 <_vfiprintf_r+0x18>
 8000c08:	6a03      	ldr	r3, [r0, #32]
 8000c0a:	b90b      	cbnz	r3, 8000c10 <_vfiprintf_r+0x18>
 8000c0c:	f7ff fcda 	bl	80005c4 <__sinit>
 8000c10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c12:	07d9      	lsls	r1, r3, #31
 8000c14:	d405      	bmi.n	8000c22 <_vfiprintf_r+0x2a>
 8000c16:	89ab      	ldrh	r3, [r5, #12]
 8000c18:	059a      	lsls	r2, r3, #22
 8000c1a:	d402      	bmi.n	8000c22 <_vfiprintf_r+0x2a>
 8000c1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c1e:	f7ff fec8 	bl	80009b2 <__retarget_lock_acquire_recursive>
 8000c22:	89ab      	ldrh	r3, [r5, #12]
 8000c24:	071b      	lsls	r3, r3, #28
 8000c26:	d501      	bpl.n	8000c2c <_vfiprintf_r+0x34>
 8000c28:	692b      	ldr	r3, [r5, #16]
 8000c2a:	b99b      	cbnz	r3, 8000c54 <_vfiprintf_r+0x5c>
 8000c2c:	4629      	mov	r1, r5
 8000c2e:	4630      	mov	r0, r6
 8000c30:	f7ff fdf0 	bl	8000814 <__swsetup_r>
 8000c34:	b170      	cbz	r0, 8000c54 <_vfiprintf_r+0x5c>
 8000c36:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c38:	07dc      	lsls	r4, r3, #31
 8000c3a:	d504      	bpl.n	8000c46 <_vfiprintf_r+0x4e>
 8000c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c40:	b01d      	add	sp, #116	@ 0x74
 8000c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c46:	89ab      	ldrh	r3, [r5, #12]
 8000c48:	0598      	lsls	r0, r3, #22
 8000c4a:	d4f7      	bmi.n	8000c3c <_vfiprintf_r+0x44>
 8000c4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c4e:	f7ff feb1 	bl	80009b4 <__retarget_lock_release_recursive>
 8000c52:	e7f3      	b.n	8000c3c <_vfiprintf_r+0x44>
 8000c54:	2300      	movs	r3, #0
 8000c56:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c58:	2320      	movs	r3, #32
 8000c5a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c5e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c62:	2330      	movs	r3, #48	@ 0x30
 8000c64:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e14 <_vfiprintf_r+0x21c>
 8000c68:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c6c:	f04f 0901 	mov.w	r9, #1
 8000c70:	4623      	mov	r3, r4
 8000c72:	469a      	mov	sl, r3
 8000c74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c78:	b10a      	cbz	r2, 8000c7e <_vfiprintf_r+0x86>
 8000c7a:	2a25      	cmp	r2, #37	@ 0x25
 8000c7c:	d1f9      	bne.n	8000c72 <_vfiprintf_r+0x7a>
 8000c7e:	ebba 0b04 	subs.w	fp, sl, r4
 8000c82:	d00b      	beq.n	8000c9c <_vfiprintf_r+0xa4>
 8000c84:	465b      	mov	r3, fp
 8000c86:	4622      	mov	r2, r4
 8000c88:	4629      	mov	r1, r5
 8000c8a:	4630      	mov	r0, r6
 8000c8c:	f7ff ffa1 	bl	8000bd2 <__sfputs_r>
 8000c90:	3001      	adds	r0, #1
 8000c92:	f000 80a7 	beq.w	8000de4 <_vfiprintf_r+0x1ec>
 8000c96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000c98:	445a      	add	r2, fp
 8000c9a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000ca0:	2b00      	cmp	r3, #0
 8000ca2:	f000 809f 	beq.w	8000de4 <_vfiprintf_r+0x1ec>
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	f04f 32ff 	mov.w	r2, #4294967295
 8000cac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000cb0:	f10a 0a01 	add.w	sl, sl, #1
 8000cb4:	9304      	str	r3, [sp, #16]
 8000cb6:	9307      	str	r3, [sp, #28]
 8000cb8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000cbc:	931a      	str	r3, [sp, #104]	@ 0x68
 8000cbe:	4654      	mov	r4, sl
 8000cc0:	2205      	movs	r2, #5
 8000cc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cc6:	4853      	ldr	r0, [pc, #332]	@ (8000e14 <_vfiprintf_r+0x21c>)
 8000cc8:	f7ff fa82 	bl	80001d0 <memchr>
 8000ccc:	9a04      	ldr	r2, [sp, #16]
 8000cce:	b9d8      	cbnz	r0, 8000d08 <_vfiprintf_r+0x110>
 8000cd0:	06d1      	lsls	r1, r2, #27
 8000cd2:	bf44      	itt	mi
 8000cd4:	2320      	movmi	r3, #32
 8000cd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000cda:	0713      	lsls	r3, r2, #28
 8000cdc:	bf44      	itt	mi
 8000cde:	232b      	movmi	r3, #43	@ 0x2b
 8000ce0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ce4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ce8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cea:	d015      	beq.n	8000d18 <_vfiprintf_r+0x120>
 8000cec:	9a07      	ldr	r2, [sp, #28]
 8000cee:	4654      	mov	r4, sl
 8000cf0:	2000      	movs	r0, #0
 8000cf2:	f04f 0c0a 	mov.w	ip, #10
 8000cf6:	4621      	mov	r1, r4
 8000cf8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cfc:	3b30      	subs	r3, #48	@ 0x30
 8000cfe:	2b09      	cmp	r3, #9
 8000d00:	d94b      	bls.n	8000d9a <_vfiprintf_r+0x1a2>
 8000d02:	b1b0      	cbz	r0, 8000d32 <_vfiprintf_r+0x13a>
 8000d04:	9207      	str	r2, [sp, #28]
 8000d06:	e014      	b.n	8000d32 <_vfiprintf_r+0x13a>
 8000d08:	eba0 0308 	sub.w	r3, r0, r8
 8000d0c:	fa09 f303 	lsl.w	r3, r9, r3
 8000d10:	4313      	orrs	r3, r2
 8000d12:	9304      	str	r3, [sp, #16]
 8000d14:	46a2      	mov	sl, r4
 8000d16:	e7d2      	b.n	8000cbe <_vfiprintf_r+0xc6>
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	1d19      	adds	r1, r3, #4
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	9103      	str	r1, [sp, #12]
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	bfbb      	ittet	lt
 8000d24:	425b      	neglt	r3, r3
 8000d26:	f042 0202 	orrlt.w	r2, r2, #2
 8000d2a:	9307      	strge	r3, [sp, #28]
 8000d2c:	9307      	strlt	r3, [sp, #28]
 8000d2e:	bfb8      	it	lt
 8000d30:	9204      	strlt	r2, [sp, #16]
 8000d32:	7823      	ldrb	r3, [r4, #0]
 8000d34:	2b2e      	cmp	r3, #46	@ 0x2e
 8000d36:	d10a      	bne.n	8000d4e <_vfiprintf_r+0x156>
 8000d38:	7863      	ldrb	r3, [r4, #1]
 8000d3a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d3c:	d132      	bne.n	8000da4 <_vfiprintf_r+0x1ac>
 8000d3e:	9b03      	ldr	r3, [sp, #12]
 8000d40:	1d1a      	adds	r2, r3, #4
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	9203      	str	r2, [sp, #12]
 8000d46:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d4a:	3402      	adds	r4, #2
 8000d4c:	9305      	str	r3, [sp, #20]
 8000d4e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000e18 <_vfiprintf_r+0x220>
 8000d52:	7821      	ldrb	r1, [r4, #0]
 8000d54:	2203      	movs	r2, #3
 8000d56:	4650      	mov	r0, sl
 8000d58:	f7ff fa3a 	bl	80001d0 <memchr>
 8000d5c:	b138      	cbz	r0, 8000d6e <_vfiprintf_r+0x176>
 8000d5e:	9b04      	ldr	r3, [sp, #16]
 8000d60:	eba0 000a 	sub.w	r0, r0, sl
 8000d64:	2240      	movs	r2, #64	@ 0x40
 8000d66:	4082      	lsls	r2, r0
 8000d68:	4313      	orrs	r3, r2
 8000d6a:	3401      	adds	r4, #1
 8000d6c:	9304      	str	r3, [sp, #16]
 8000d6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d72:	482a      	ldr	r0, [pc, #168]	@ (8000e1c <_vfiprintf_r+0x224>)
 8000d74:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d78:	2206      	movs	r2, #6
 8000d7a:	f7ff fa29 	bl	80001d0 <memchr>
 8000d7e:	2800      	cmp	r0, #0
 8000d80:	d03f      	beq.n	8000e02 <_vfiprintf_r+0x20a>
 8000d82:	4b27      	ldr	r3, [pc, #156]	@ (8000e20 <_vfiprintf_r+0x228>)
 8000d84:	bb1b      	cbnz	r3, 8000dce <_vfiprintf_r+0x1d6>
 8000d86:	9b03      	ldr	r3, [sp, #12]
 8000d88:	3307      	adds	r3, #7
 8000d8a:	f023 0307 	bic.w	r3, r3, #7
 8000d8e:	3308      	adds	r3, #8
 8000d90:	9303      	str	r3, [sp, #12]
 8000d92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000d94:	443b      	add	r3, r7
 8000d96:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d98:	e76a      	b.n	8000c70 <_vfiprintf_r+0x78>
 8000d9a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d9e:	460c      	mov	r4, r1
 8000da0:	2001      	movs	r0, #1
 8000da2:	e7a8      	b.n	8000cf6 <_vfiprintf_r+0xfe>
 8000da4:	2300      	movs	r3, #0
 8000da6:	3401      	adds	r4, #1
 8000da8:	9305      	str	r3, [sp, #20]
 8000daa:	4619      	mov	r1, r3
 8000dac:	f04f 0c0a 	mov.w	ip, #10
 8000db0:	4620      	mov	r0, r4
 8000db2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000db6:	3a30      	subs	r2, #48	@ 0x30
 8000db8:	2a09      	cmp	r2, #9
 8000dba:	d903      	bls.n	8000dc4 <_vfiprintf_r+0x1cc>
 8000dbc:	2b00      	cmp	r3, #0
 8000dbe:	d0c6      	beq.n	8000d4e <_vfiprintf_r+0x156>
 8000dc0:	9105      	str	r1, [sp, #20]
 8000dc2:	e7c4      	b.n	8000d4e <_vfiprintf_r+0x156>
 8000dc4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000dc8:	4604      	mov	r4, r0
 8000dca:	2301      	movs	r3, #1
 8000dcc:	e7f0      	b.n	8000db0 <_vfiprintf_r+0x1b8>
 8000dce:	ab03      	add	r3, sp, #12
 8000dd0:	9300      	str	r3, [sp, #0]
 8000dd2:	462a      	mov	r2, r5
 8000dd4:	4b13      	ldr	r3, [pc, #76]	@ (8000e24 <_vfiprintf_r+0x22c>)
 8000dd6:	a904      	add	r1, sp, #16
 8000dd8:	4630      	mov	r0, r6
 8000dda:	f3af 8000 	nop.w
 8000dde:	4607      	mov	r7, r0
 8000de0:	1c78      	adds	r0, r7, #1
 8000de2:	d1d6      	bne.n	8000d92 <_vfiprintf_r+0x19a>
 8000de4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000de6:	07d9      	lsls	r1, r3, #31
 8000de8:	d405      	bmi.n	8000df6 <_vfiprintf_r+0x1fe>
 8000dea:	89ab      	ldrh	r3, [r5, #12]
 8000dec:	059a      	lsls	r2, r3, #22
 8000dee:	d402      	bmi.n	8000df6 <_vfiprintf_r+0x1fe>
 8000df0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000df2:	f7ff fddf 	bl	80009b4 <__retarget_lock_release_recursive>
 8000df6:	89ab      	ldrh	r3, [r5, #12]
 8000df8:	065b      	lsls	r3, r3, #25
 8000dfa:	f53f af1f 	bmi.w	8000c3c <_vfiprintf_r+0x44>
 8000dfe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e00:	e71e      	b.n	8000c40 <_vfiprintf_r+0x48>
 8000e02:	ab03      	add	r3, sp, #12
 8000e04:	9300      	str	r3, [sp, #0]
 8000e06:	462a      	mov	r2, r5
 8000e08:	4b06      	ldr	r3, [pc, #24]	@ (8000e24 <_vfiprintf_r+0x22c>)
 8000e0a:	a904      	add	r1, sp, #16
 8000e0c:	4630      	mov	r0, r6
 8000e0e:	f000 f879 	bl	8000f04 <_printf_i>
 8000e12:	e7e4      	b.n	8000dde <_vfiprintf_r+0x1e6>
 8000e14:	08001471 	.word	0x08001471
 8000e18:	08001477 	.word	0x08001477
 8000e1c:	0800147b 	.word	0x0800147b
 8000e20:	00000000 	.word	0x00000000
 8000e24:	08000bd3 	.word	0x08000bd3

08000e28 <_printf_common>:
 8000e28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e2c:	4616      	mov	r6, r2
 8000e2e:	4698      	mov	r8, r3
 8000e30:	688a      	ldr	r2, [r1, #8]
 8000e32:	690b      	ldr	r3, [r1, #16]
 8000e34:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000e38:	4293      	cmp	r3, r2
 8000e3a:	bfb8      	it	lt
 8000e3c:	4613      	movlt	r3, r2
 8000e3e:	6033      	str	r3, [r6, #0]
 8000e40:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e44:	4607      	mov	r7, r0
 8000e46:	460c      	mov	r4, r1
 8000e48:	b10a      	cbz	r2, 8000e4e <_printf_common+0x26>
 8000e4a:	3301      	adds	r3, #1
 8000e4c:	6033      	str	r3, [r6, #0]
 8000e4e:	6823      	ldr	r3, [r4, #0]
 8000e50:	0699      	lsls	r1, r3, #26
 8000e52:	bf42      	ittt	mi
 8000e54:	6833      	ldrmi	r3, [r6, #0]
 8000e56:	3302      	addmi	r3, #2
 8000e58:	6033      	strmi	r3, [r6, #0]
 8000e5a:	6825      	ldr	r5, [r4, #0]
 8000e5c:	f015 0506 	ands.w	r5, r5, #6
 8000e60:	d106      	bne.n	8000e70 <_printf_common+0x48>
 8000e62:	f104 0a19 	add.w	sl, r4, #25
 8000e66:	68e3      	ldr	r3, [r4, #12]
 8000e68:	6832      	ldr	r2, [r6, #0]
 8000e6a:	1a9b      	subs	r3, r3, r2
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	dc26      	bgt.n	8000ebe <_printf_common+0x96>
 8000e70:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e74:	6822      	ldr	r2, [r4, #0]
 8000e76:	3b00      	subs	r3, #0
 8000e78:	bf18      	it	ne
 8000e7a:	2301      	movne	r3, #1
 8000e7c:	0692      	lsls	r2, r2, #26
 8000e7e:	d42b      	bmi.n	8000ed8 <_printf_common+0xb0>
 8000e80:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e84:	4641      	mov	r1, r8
 8000e86:	4638      	mov	r0, r7
 8000e88:	47c8      	blx	r9
 8000e8a:	3001      	adds	r0, #1
 8000e8c:	d01e      	beq.n	8000ecc <_printf_common+0xa4>
 8000e8e:	6823      	ldr	r3, [r4, #0]
 8000e90:	6922      	ldr	r2, [r4, #16]
 8000e92:	f003 0306 	and.w	r3, r3, #6
 8000e96:	2b04      	cmp	r3, #4
 8000e98:	bf02      	ittt	eq
 8000e9a:	68e5      	ldreq	r5, [r4, #12]
 8000e9c:	6833      	ldreq	r3, [r6, #0]
 8000e9e:	1aed      	subeq	r5, r5, r3
 8000ea0:	68a3      	ldr	r3, [r4, #8]
 8000ea2:	bf0c      	ite	eq
 8000ea4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ea8:	2500      	movne	r5, #0
 8000eaa:	4293      	cmp	r3, r2
 8000eac:	bfc4      	itt	gt
 8000eae:	1a9b      	subgt	r3, r3, r2
 8000eb0:	18ed      	addgt	r5, r5, r3
 8000eb2:	2600      	movs	r6, #0
 8000eb4:	341a      	adds	r4, #26
 8000eb6:	42b5      	cmp	r5, r6
 8000eb8:	d11a      	bne.n	8000ef0 <_printf_common+0xc8>
 8000eba:	2000      	movs	r0, #0
 8000ebc:	e008      	b.n	8000ed0 <_printf_common+0xa8>
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	4652      	mov	r2, sl
 8000ec2:	4641      	mov	r1, r8
 8000ec4:	4638      	mov	r0, r7
 8000ec6:	47c8      	blx	r9
 8000ec8:	3001      	adds	r0, #1
 8000eca:	d103      	bne.n	8000ed4 <_printf_common+0xac>
 8000ecc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ed0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed4:	3501      	adds	r5, #1
 8000ed6:	e7c6      	b.n	8000e66 <_printf_common+0x3e>
 8000ed8:	18e1      	adds	r1, r4, r3
 8000eda:	1c5a      	adds	r2, r3, #1
 8000edc:	2030      	movs	r0, #48	@ 0x30
 8000ede:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000ee2:	4422      	add	r2, r4
 8000ee4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000ee8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000eec:	3302      	adds	r3, #2
 8000eee:	e7c7      	b.n	8000e80 <_printf_common+0x58>
 8000ef0:	2301      	movs	r3, #1
 8000ef2:	4622      	mov	r2, r4
 8000ef4:	4641      	mov	r1, r8
 8000ef6:	4638      	mov	r0, r7
 8000ef8:	47c8      	blx	r9
 8000efa:	3001      	adds	r0, #1
 8000efc:	d0e6      	beq.n	8000ecc <_printf_common+0xa4>
 8000efe:	3601      	adds	r6, #1
 8000f00:	e7d9      	b.n	8000eb6 <_printf_common+0x8e>
	...

08000f04 <_printf_i>:
 8000f04:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f08:	7e0f      	ldrb	r7, [r1, #24]
 8000f0a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f0c:	2f78      	cmp	r7, #120	@ 0x78
 8000f0e:	4691      	mov	r9, r2
 8000f10:	4680      	mov	r8, r0
 8000f12:	460c      	mov	r4, r1
 8000f14:	469a      	mov	sl, r3
 8000f16:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f1a:	d807      	bhi.n	8000f2c <_printf_i+0x28>
 8000f1c:	2f62      	cmp	r7, #98	@ 0x62
 8000f1e:	d80a      	bhi.n	8000f36 <_printf_i+0x32>
 8000f20:	2f00      	cmp	r7, #0
 8000f22:	f000 80d2 	beq.w	80010ca <_printf_i+0x1c6>
 8000f26:	2f58      	cmp	r7, #88	@ 0x58
 8000f28:	f000 80b9 	beq.w	800109e <_printf_i+0x19a>
 8000f2c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f30:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000f34:	e03a      	b.n	8000fac <_printf_i+0xa8>
 8000f36:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000f3a:	2b15      	cmp	r3, #21
 8000f3c:	d8f6      	bhi.n	8000f2c <_printf_i+0x28>
 8000f3e:	a101      	add	r1, pc, #4	@ (adr r1, 8000f44 <_printf_i+0x40>)
 8000f40:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f44:	08000f9d 	.word	0x08000f9d
 8000f48:	08000fb1 	.word	0x08000fb1
 8000f4c:	08000f2d 	.word	0x08000f2d
 8000f50:	08000f2d 	.word	0x08000f2d
 8000f54:	08000f2d 	.word	0x08000f2d
 8000f58:	08000f2d 	.word	0x08000f2d
 8000f5c:	08000fb1 	.word	0x08000fb1
 8000f60:	08000f2d 	.word	0x08000f2d
 8000f64:	08000f2d 	.word	0x08000f2d
 8000f68:	08000f2d 	.word	0x08000f2d
 8000f6c:	08000f2d 	.word	0x08000f2d
 8000f70:	080010b1 	.word	0x080010b1
 8000f74:	08000fdb 	.word	0x08000fdb
 8000f78:	0800106b 	.word	0x0800106b
 8000f7c:	08000f2d 	.word	0x08000f2d
 8000f80:	08000f2d 	.word	0x08000f2d
 8000f84:	080010d3 	.word	0x080010d3
 8000f88:	08000f2d 	.word	0x08000f2d
 8000f8c:	08000fdb 	.word	0x08000fdb
 8000f90:	08000f2d 	.word	0x08000f2d
 8000f94:	08000f2d 	.word	0x08000f2d
 8000f98:	08001073 	.word	0x08001073
 8000f9c:	6833      	ldr	r3, [r6, #0]
 8000f9e:	1d1a      	adds	r2, r3, #4
 8000fa0:	681b      	ldr	r3, [r3, #0]
 8000fa2:	6032      	str	r2, [r6, #0]
 8000fa4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fa8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000fac:	2301      	movs	r3, #1
 8000fae:	e09d      	b.n	80010ec <_printf_i+0x1e8>
 8000fb0:	6833      	ldr	r3, [r6, #0]
 8000fb2:	6820      	ldr	r0, [r4, #0]
 8000fb4:	1d19      	adds	r1, r3, #4
 8000fb6:	6031      	str	r1, [r6, #0]
 8000fb8:	0606      	lsls	r6, r0, #24
 8000fba:	d501      	bpl.n	8000fc0 <_printf_i+0xbc>
 8000fbc:	681d      	ldr	r5, [r3, #0]
 8000fbe:	e003      	b.n	8000fc8 <_printf_i+0xc4>
 8000fc0:	0645      	lsls	r5, r0, #25
 8000fc2:	d5fb      	bpl.n	8000fbc <_printf_i+0xb8>
 8000fc4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000fc8:	2d00      	cmp	r5, #0
 8000fca:	da03      	bge.n	8000fd4 <_printf_i+0xd0>
 8000fcc:	232d      	movs	r3, #45	@ 0x2d
 8000fce:	426d      	negs	r5, r5
 8000fd0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fd4:	4859      	ldr	r0, [pc, #356]	@ (800113c <_printf_i+0x238>)
 8000fd6:	230a      	movs	r3, #10
 8000fd8:	e011      	b.n	8000ffe <_printf_i+0xfa>
 8000fda:	6821      	ldr	r1, [r4, #0]
 8000fdc:	6833      	ldr	r3, [r6, #0]
 8000fde:	0608      	lsls	r0, r1, #24
 8000fe0:	f853 5b04 	ldr.w	r5, [r3], #4
 8000fe4:	d402      	bmi.n	8000fec <_printf_i+0xe8>
 8000fe6:	0649      	lsls	r1, r1, #25
 8000fe8:	bf48      	it	mi
 8000fea:	b2ad      	uxthmi	r5, r5
 8000fec:	2f6f      	cmp	r7, #111	@ 0x6f
 8000fee:	4853      	ldr	r0, [pc, #332]	@ (800113c <_printf_i+0x238>)
 8000ff0:	6033      	str	r3, [r6, #0]
 8000ff2:	bf14      	ite	ne
 8000ff4:	230a      	movne	r3, #10
 8000ff6:	2308      	moveq	r3, #8
 8000ff8:	2100      	movs	r1, #0
 8000ffa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000ffe:	6866      	ldr	r6, [r4, #4]
 8001000:	60a6      	str	r6, [r4, #8]
 8001002:	2e00      	cmp	r6, #0
 8001004:	bfa2      	ittt	ge
 8001006:	6821      	ldrge	r1, [r4, #0]
 8001008:	f021 0104 	bicge.w	r1, r1, #4
 800100c:	6021      	strge	r1, [r4, #0]
 800100e:	b90d      	cbnz	r5, 8001014 <_printf_i+0x110>
 8001010:	2e00      	cmp	r6, #0
 8001012:	d04b      	beq.n	80010ac <_printf_i+0x1a8>
 8001014:	4616      	mov	r6, r2
 8001016:	fbb5 f1f3 	udiv	r1, r5, r3
 800101a:	fb03 5711 	mls	r7, r3, r1, r5
 800101e:	5dc7      	ldrb	r7, [r0, r7]
 8001020:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001024:	462f      	mov	r7, r5
 8001026:	42bb      	cmp	r3, r7
 8001028:	460d      	mov	r5, r1
 800102a:	d9f4      	bls.n	8001016 <_printf_i+0x112>
 800102c:	2b08      	cmp	r3, #8
 800102e:	d10b      	bne.n	8001048 <_printf_i+0x144>
 8001030:	6823      	ldr	r3, [r4, #0]
 8001032:	07df      	lsls	r7, r3, #31
 8001034:	d508      	bpl.n	8001048 <_printf_i+0x144>
 8001036:	6923      	ldr	r3, [r4, #16]
 8001038:	6861      	ldr	r1, [r4, #4]
 800103a:	4299      	cmp	r1, r3
 800103c:	bfde      	ittt	le
 800103e:	2330      	movle	r3, #48	@ 0x30
 8001040:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001044:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001048:	1b92      	subs	r2, r2, r6
 800104a:	6122      	str	r2, [r4, #16]
 800104c:	f8cd a000 	str.w	sl, [sp]
 8001050:	464b      	mov	r3, r9
 8001052:	aa03      	add	r2, sp, #12
 8001054:	4621      	mov	r1, r4
 8001056:	4640      	mov	r0, r8
 8001058:	f7ff fee6 	bl	8000e28 <_printf_common>
 800105c:	3001      	adds	r0, #1
 800105e:	d14a      	bne.n	80010f6 <_printf_i+0x1f2>
 8001060:	f04f 30ff 	mov.w	r0, #4294967295
 8001064:	b004      	add	sp, #16
 8001066:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800106a:	6823      	ldr	r3, [r4, #0]
 800106c:	f043 0320 	orr.w	r3, r3, #32
 8001070:	6023      	str	r3, [r4, #0]
 8001072:	4833      	ldr	r0, [pc, #204]	@ (8001140 <_printf_i+0x23c>)
 8001074:	2778      	movs	r7, #120	@ 0x78
 8001076:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800107a:	6823      	ldr	r3, [r4, #0]
 800107c:	6831      	ldr	r1, [r6, #0]
 800107e:	061f      	lsls	r7, r3, #24
 8001080:	f851 5b04 	ldr.w	r5, [r1], #4
 8001084:	d402      	bmi.n	800108c <_printf_i+0x188>
 8001086:	065f      	lsls	r7, r3, #25
 8001088:	bf48      	it	mi
 800108a:	b2ad      	uxthmi	r5, r5
 800108c:	6031      	str	r1, [r6, #0]
 800108e:	07d9      	lsls	r1, r3, #31
 8001090:	bf44      	itt	mi
 8001092:	f043 0320 	orrmi.w	r3, r3, #32
 8001096:	6023      	strmi	r3, [r4, #0]
 8001098:	b11d      	cbz	r5, 80010a2 <_printf_i+0x19e>
 800109a:	2310      	movs	r3, #16
 800109c:	e7ac      	b.n	8000ff8 <_printf_i+0xf4>
 800109e:	4827      	ldr	r0, [pc, #156]	@ (800113c <_printf_i+0x238>)
 80010a0:	e7e9      	b.n	8001076 <_printf_i+0x172>
 80010a2:	6823      	ldr	r3, [r4, #0]
 80010a4:	f023 0320 	bic.w	r3, r3, #32
 80010a8:	6023      	str	r3, [r4, #0]
 80010aa:	e7f6      	b.n	800109a <_printf_i+0x196>
 80010ac:	4616      	mov	r6, r2
 80010ae:	e7bd      	b.n	800102c <_printf_i+0x128>
 80010b0:	6833      	ldr	r3, [r6, #0]
 80010b2:	6825      	ldr	r5, [r4, #0]
 80010b4:	6961      	ldr	r1, [r4, #20]
 80010b6:	1d18      	adds	r0, r3, #4
 80010b8:	6030      	str	r0, [r6, #0]
 80010ba:	062e      	lsls	r6, r5, #24
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	d501      	bpl.n	80010c4 <_printf_i+0x1c0>
 80010c0:	6019      	str	r1, [r3, #0]
 80010c2:	e002      	b.n	80010ca <_printf_i+0x1c6>
 80010c4:	0668      	lsls	r0, r5, #25
 80010c6:	d5fb      	bpl.n	80010c0 <_printf_i+0x1bc>
 80010c8:	8019      	strh	r1, [r3, #0]
 80010ca:	2300      	movs	r3, #0
 80010cc:	6123      	str	r3, [r4, #16]
 80010ce:	4616      	mov	r6, r2
 80010d0:	e7bc      	b.n	800104c <_printf_i+0x148>
 80010d2:	6833      	ldr	r3, [r6, #0]
 80010d4:	1d1a      	adds	r2, r3, #4
 80010d6:	6032      	str	r2, [r6, #0]
 80010d8:	681e      	ldr	r6, [r3, #0]
 80010da:	6862      	ldr	r2, [r4, #4]
 80010dc:	2100      	movs	r1, #0
 80010de:	4630      	mov	r0, r6
 80010e0:	f7ff f876 	bl	80001d0 <memchr>
 80010e4:	b108      	cbz	r0, 80010ea <_printf_i+0x1e6>
 80010e6:	1b80      	subs	r0, r0, r6
 80010e8:	6060      	str	r0, [r4, #4]
 80010ea:	6863      	ldr	r3, [r4, #4]
 80010ec:	6123      	str	r3, [r4, #16]
 80010ee:	2300      	movs	r3, #0
 80010f0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010f4:	e7aa      	b.n	800104c <_printf_i+0x148>
 80010f6:	6923      	ldr	r3, [r4, #16]
 80010f8:	4632      	mov	r2, r6
 80010fa:	4649      	mov	r1, r9
 80010fc:	4640      	mov	r0, r8
 80010fe:	47d0      	blx	sl
 8001100:	3001      	adds	r0, #1
 8001102:	d0ad      	beq.n	8001060 <_printf_i+0x15c>
 8001104:	6823      	ldr	r3, [r4, #0]
 8001106:	079b      	lsls	r3, r3, #30
 8001108:	d413      	bmi.n	8001132 <_printf_i+0x22e>
 800110a:	68e0      	ldr	r0, [r4, #12]
 800110c:	9b03      	ldr	r3, [sp, #12]
 800110e:	4298      	cmp	r0, r3
 8001110:	bfb8      	it	lt
 8001112:	4618      	movlt	r0, r3
 8001114:	e7a6      	b.n	8001064 <_printf_i+0x160>
 8001116:	2301      	movs	r3, #1
 8001118:	4632      	mov	r2, r6
 800111a:	4649      	mov	r1, r9
 800111c:	4640      	mov	r0, r8
 800111e:	47d0      	blx	sl
 8001120:	3001      	adds	r0, #1
 8001122:	d09d      	beq.n	8001060 <_printf_i+0x15c>
 8001124:	3501      	adds	r5, #1
 8001126:	68e3      	ldr	r3, [r4, #12]
 8001128:	9903      	ldr	r1, [sp, #12]
 800112a:	1a5b      	subs	r3, r3, r1
 800112c:	42ab      	cmp	r3, r5
 800112e:	dcf2      	bgt.n	8001116 <_printf_i+0x212>
 8001130:	e7eb      	b.n	800110a <_printf_i+0x206>
 8001132:	2500      	movs	r5, #0
 8001134:	f104 0619 	add.w	r6, r4, #25
 8001138:	e7f5      	b.n	8001126 <_printf_i+0x222>
 800113a:	bf00      	nop
 800113c:	08001482 	.word	0x08001482
 8001140:	08001493 	.word	0x08001493

08001144 <__sflush_r>:
 8001144:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001148:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800114a:	0716      	lsls	r6, r2, #28
 800114c:	4605      	mov	r5, r0
 800114e:	460c      	mov	r4, r1
 8001150:	d454      	bmi.n	80011fc <__sflush_r+0xb8>
 8001152:	684b      	ldr	r3, [r1, #4]
 8001154:	2b00      	cmp	r3, #0
 8001156:	dc02      	bgt.n	800115e <__sflush_r+0x1a>
 8001158:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800115a:	2b00      	cmp	r3, #0
 800115c:	dd48      	ble.n	80011f0 <__sflush_r+0xac>
 800115e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001160:	2e00      	cmp	r6, #0
 8001162:	d045      	beq.n	80011f0 <__sflush_r+0xac>
 8001164:	2300      	movs	r3, #0
 8001166:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800116a:	682f      	ldr	r7, [r5, #0]
 800116c:	6a21      	ldr	r1, [r4, #32]
 800116e:	602b      	str	r3, [r5, #0]
 8001170:	d030      	beq.n	80011d4 <__sflush_r+0x90>
 8001172:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	0759      	lsls	r1, r3, #29
 8001178:	d505      	bpl.n	8001186 <__sflush_r+0x42>
 800117a:	6863      	ldr	r3, [r4, #4]
 800117c:	1ad2      	subs	r2, r2, r3
 800117e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001180:	b10b      	cbz	r3, 8001186 <__sflush_r+0x42>
 8001182:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001184:	1ad2      	subs	r2, r2, r3
 8001186:	2300      	movs	r3, #0
 8001188:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800118a:	6a21      	ldr	r1, [r4, #32]
 800118c:	4628      	mov	r0, r5
 800118e:	47b0      	blx	r6
 8001190:	1c43      	adds	r3, r0, #1
 8001192:	89a3      	ldrh	r3, [r4, #12]
 8001194:	d106      	bne.n	80011a4 <__sflush_r+0x60>
 8001196:	6829      	ldr	r1, [r5, #0]
 8001198:	291d      	cmp	r1, #29
 800119a:	d82b      	bhi.n	80011f4 <__sflush_r+0xb0>
 800119c:	4a28      	ldr	r2, [pc, #160]	@ (8001240 <__sflush_r+0xfc>)
 800119e:	410a      	asrs	r2, r1
 80011a0:	07d6      	lsls	r6, r2, #31
 80011a2:	d427      	bmi.n	80011f4 <__sflush_r+0xb0>
 80011a4:	2200      	movs	r2, #0
 80011a6:	6062      	str	r2, [r4, #4]
 80011a8:	04d9      	lsls	r1, r3, #19
 80011aa:	6922      	ldr	r2, [r4, #16]
 80011ac:	6022      	str	r2, [r4, #0]
 80011ae:	d504      	bpl.n	80011ba <__sflush_r+0x76>
 80011b0:	1c42      	adds	r2, r0, #1
 80011b2:	d101      	bne.n	80011b8 <__sflush_r+0x74>
 80011b4:	682b      	ldr	r3, [r5, #0]
 80011b6:	b903      	cbnz	r3, 80011ba <__sflush_r+0x76>
 80011b8:	6560      	str	r0, [r4, #84]	@ 0x54
 80011ba:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011bc:	602f      	str	r7, [r5, #0]
 80011be:	b1b9      	cbz	r1, 80011f0 <__sflush_r+0xac>
 80011c0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011c4:	4299      	cmp	r1, r3
 80011c6:	d002      	beq.n	80011ce <__sflush_r+0x8a>
 80011c8:	4628      	mov	r0, r5
 80011ca:	f7ff fbf5 	bl	80009b8 <_free_r>
 80011ce:	2300      	movs	r3, #0
 80011d0:	6363      	str	r3, [r4, #52]	@ 0x34
 80011d2:	e00d      	b.n	80011f0 <__sflush_r+0xac>
 80011d4:	2301      	movs	r3, #1
 80011d6:	4628      	mov	r0, r5
 80011d8:	47b0      	blx	r6
 80011da:	4602      	mov	r2, r0
 80011dc:	1c50      	adds	r0, r2, #1
 80011de:	d1c9      	bne.n	8001174 <__sflush_r+0x30>
 80011e0:	682b      	ldr	r3, [r5, #0]
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d0c6      	beq.n	8001174 <__sflush_r+0x30>
 80011e6:	2b1d      	cmp	r3, #29
 80011e8:	d001      	beq.n	80011ee <__sflush_r+0xaa>
 80011ea:	2b16      	cmp	r3, #22
 80011ec:	d11d      	bne.n	800122a <__sflush_r+0xe6>
 80011ee:	602f      	str	r7, [r5, #0]
 80011f0:	2000      	movs	r0, #0
 80011f2:	e021      	b.n	8001238 <__sflush_r+0xf4>
 80011f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011f8:	b21b      	sxth	r3, r3
 80011fa:	e01a      	b.n	8001232 <__sflush_r+0xee>
 80011fc:	690f      	ldr	r7, [r1, #16]
 80011fe:	2f00      	cmp	r7, #0
 8001200:	d0f6      	beq.n	80011f0 <__sflush_r+0xac>
 8001202:	0793      	lsls	r3, r2, #30
 8001204:	680e      	ldr	r6, [r1, #0]
 8001206:	bf08      	it	eq
 8001208:	694b      	ldreq	r3, [r1, #20]
 800120a:	600f      	str	r7, [r1, #0]
 800120c:	bf18      	it	ne
 800120e:	2300      	movne	r3, #0
 8001210:	1bf6      	subs	r6, r6, r7
 8001212:	608b      	str	r3, [r1, #8]
 8001214:	2e00      	cmp	r6, #0
 8001216:	ddeb      	ble.n	80011f0 <__sflush_r+0xac>
 8001218:	6a21      	ldr	r1, [r4, #32]
 800121a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800121e:	4633      	mov	r3, r6
 8001220:	463a      	mov	r2, r7
 8001222:	4628      	mov	r0, r5
 8001224:	47e0      	blx	ip
 8001226:	2800      	cmp	r0, #0
 8001228:	dc07      	bgt.n	800123a <__sflush_r+0xf6>
 800122a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800122e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001232:	81a3      	strh	r3, [r4, #12]
 8001234:	f04f 30ff 	mov.w	r0, #4294967295
 8001238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800123a:	4407      	add	r7, r0
 800123c:	1a36      	subs	r6, r6, r0
 800123e:	e7e9      	b.n	8001214 <__sflush_r+0xd0>
 8001240:	dfbffffe 	.word	0xdfbffffe

08001244 <_fflush_r>:
 8001244:	b538      	push	{r3, r4, r5, lr}
 8001246:	690b      	ldr	r3, [r1, #16]
 8001248:	4605      	mov	r5, r0
 800124a:	460c      	mov	r4, r1
 800124c:	b913      	cbnz	r3, 8001254 <_fflush_r+0x10>
 800124e:	2500      	movs	r5, #0
 8001250:	4628      	mov	r0, r5
 8001252:	bd38      	pop	{r3, r4, r5, pc}
 8001254:	b118      	cbz	r0, 800125e <_fflush_r+0x1a>
 8001256:	6a03      	ldr	r3, [r0, #32]
 8001258:	b90b      	cbnz	r3, 800125e <_fflush_r+0x1a>
 800125a:	f7ff f9b3 	bl	80005c4 <__sinit>
 800125e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001262:	2b00      	cmp	r3, #0
 8001264:	d0f3      	beq.n	800124e <_fflush_r+0xa>
 8001266:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001268:	07d0      	lsls	r0, r2, #31
 800126a:	d404      	bmi.n	8001276 <_fflush_r+0x32>
 800126c:	0599      	lsls	r1, r3, #22
 800126e:	d402      	bmi.n	8001276 <_fflush_r+0x32>
 8001270:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001272:	f7ff fb9e 	bl	80009b2 <__retarget_lock_acquire_recursive>
 8001276:	4628      	mov	r0, r5
 8001278:	4621      	mov	r1, r4
 800127a:	f7ff ff63 	bl	8001144 <__sflush_r>
 800127e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001280:	07da      	lsls	r2, r3, #31
 8001282:	4605      	mov	r5, r0
 8001284:	d4e4      	bmi.n	8001250 <_fflush_r+0xc>
 8001286:	89a3      	ldrh	r3, [r4, #12]
 8001288:	059b      	lsls	r3, r3, #22
 800128a:	d4e1      	bmi.n	8001250 <_fflush_r+0xc>
 800128c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800128e:	f7ff fb91 	bl	80009b4 <__retarget_lock_release_recursive>
 8001292:	e7dd      	b.n	8001250 <_fflush_r+0xc>

08001294 <__swhatbuf_r>:
 8001294:	b570      	push	{r4, r5, r6, lr}
 8001296:	460c      	mov	r4, r1
 8001298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800129c:	2900      	cmp	r1, #0
 800129e:	b096      	sub	sp, #88	@ 0x58
 80012a0:	4615      	mov	r5, r2
 80012a2:	461e      	mov	r6, r3
 80012a4:	da0d      	bge.n	80012c2 <__swhatbuf_r+0x2e>
 80012a6:	89a3      	ldrh	r3, [r4, #12]
 80012a8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012ac:	f04f 0100 	mov.w	r1, #0
 80012b0:	bf14      	ite	ne
 80012b2:	2340      	movne	r3, #64	@ 0x40
 80012b4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012b8:	2000      	movs	r0, #0
 80012ba:	6031      	str	r1, [r6, #0]
 80012bc:	602b      	str	r3, [r5, #0]
 80012be:	b016      	add	sp, #88	@ 0x58
 80012c0:	bd70      	pop	{r4, r5, r6, pc}
 80012c2:	466a      	mov	r2, sp
 80012c4:	f000 f848 	bl	8001358 <_fstat_r>
 80012c8:	2800      	cmp	r0, #0
 80012ca:	dbec      	blt.n	80012a6 <__swhatbuf_r+0x12>
 80012cc:	9901      	ldr	r1, [sp, #4]
 80012ce:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012d2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012d6:	4259      	negs	r1, r3
 80012d8:	4159      	adcs	r1, r3
 80012da:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012de:	e7eb      	b.n	80012b8 <__swhatbuf_r+0x24>

080012e0 <__smakebuf_r>:
 80012e0:	898b      	ldrh	r3, [r1, #12]
 80012e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012e4:	079d      	lsls	r5, r3, #30
 80012e6:	4606      	mov	r6, r0
 80012e8:	460c      	mov	r4, r1
 80012ea:	d507      	bpl.n	80012fc <__smakebuf_r+0x1c>
 80012ec:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012f0:	6023      	str	r3, [r4, #0]
 80012f2:	6123      	str	r3, [r4, #16]
 80012f4:	2301      	movs	r3, #1
 80012f6:	6163      	str	r3, [r4, #20]
 80012f8:	b003      	add	sp, #12
 80012fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012fc:	ab01      	add	r3, sp, #4
 80012fe:	466a      	mov	r2, sp
 8001300:	f7ff ffc8 	bl	8001294 <__swhatbuf_r>
 8001304:	9f00      	ldr	r7, [sp, #0]
 8001306:	4605      	mov	r5, r0
 8001308:	4639      	mov	r1, r7
 800130a:	4630      	mov	r0, r6
 800130c:	f7ff fbc0 	bl	8000a90 <_malloc_r>
 8001310:	b948      	cbnz	r0, 8001326 <__smakebuf_r+0x46>
 8001312:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001316:	059a      	lsls	r2, r3, #22
 8001318:	d4ee      	bmi.n	80012f8 <__smakebuf_r+0x18>
 800131a:	f023 0303 	bic.w	r3, r3, #3
 800131e:	f043 0302 	orr.w	r3, r3, #2
 8001322:	81a3      	strh	r3, [r4, #12]
 8001324:	e7e2      	b.n	80012ec <__smakebuf_r+0xc>
 8001326:	89a3      	ldrh	r3, [r4, #12]
 8001328:	6020      	str	r0, [r4, #0]
 800132a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	9b01      	ldr	r3, [sp, #4]
 8001332:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001336:	b15b      	cbz	r3, 8001350 <__smakebuf_r+0x70>
 8001338:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800133c:	4630      	mov	r0, r6
 800133e:	f000 f81d 	bl	800137c <_isatty_r>
 8001342:	b128      	cbz	r0, 8001350 <__smakebuf_r+0x70>
 8001344:	89a3      	ldrh	r3, [r4, #12]
 8001346:	f023 0303 	bic.w	r3, r3, #3
 800134a:	f043 0301 	orr.w	r3, r3, #1
 800134e:	81a3      	strh	r3, [r4, #12]
 8001350:	89a3      	ldrh	r3, [r4, #12]
 8001352:	431d      	orrs	r5, r3
 8001354:	81a5      	strh	r5, [r4, #12]
 8001356:	e7cf      	b.n	80012f8 <__smakebuf_r+0x18>

08001358 <_fstat_r>:
 8001358:	b538      	push	{r3, r4, r5, lr}
 800135a:	4d07      	ldr	r5, [pc, #28]	@ (8001378 <_fstat_r+0x20>)
 800135c:	2300      	movs	r3, #0
 800135e:	4604      	mov	r4, r0
 8001360:	4608      	mov	r0, r1
 8001362:	4611      	mov	r1, r2
 8001364:	602b      	str	r3, [r5, #0]
 8001366:	f7ff f81b 	bl	80003a0 <_fstat>
 800136a:	1c43      	adds	r3, r0, #1
 800136c:	d102      	bne.n	8001374 <_fstat_r+0x1c>
 800136e:	682b      	ldr	r3, [r5, #0]
 8001370:	b103      	cbz	r3, 8001374 <_fstat_r+0x1c>
 8001372:	6023      	str	r3, [r4, #0]
 8001374:	bd38      	pop	{r3, r4, r5, pc}
 8001376:	bf00      	nop
 8001378:	200001b8 	.word	0x200001b8

0800137c <_isatty_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4d06      	ldr	r5, [pc, #24]	@ (8001398 <_isatty_r+0x1c>)
 8001380:	2300      	movs	r3, #0
 8001382:	4604      	mov	r4, r0
 8001384:	4608      	mov	r0, r1
 8001386:	602b      	str	r3, [r5, #0]
 8001388:	f7ff f819 	bl	80003be <_isatty>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_isatty_r+0x1a>
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	b103      	cbz	r3, 8001396 <_isatty_r+0x1a>
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	200001b8 	.word	0x200001b8

0800139c <_sbrk_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	4d06      	ldr	r5, [pc, #24]	@ (80013b8 <_sbrk_r+0x1c>)
 80013a0:	2300      	movs	r3, #0
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	602b      	str	r3, [r5, #0]
 80013a8:	f7ff f820 	bl	80003ec <_sbrk>
 80013ac:	1c43      	adds	r3, r0, #1
 80013ae:	d102      	bne.n	80013b6 <_sbrk_r+0x1a>
 80013b0:	682b      	ldr	r3, [r5, #0]
 80013b2:	b103      	cbz	r3, 80013b6 <_sbrk_r+0x1a>
 80013b4:	6023      	str	r3, [r4, #0]
 80013b6:	bd38      	pop	{r3, r4, r5, pc}
 80013b8:	200001b8 	.word	0x200001b8

080013bc <_init>:
 80013bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013be:	bf00      	nop
 80013c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c2:	bc08      	pop	{r3}
 80013c4:	469e      	mov	lr, r3
 80013c6:	4770      	bx	lr

080013c8 <_fini>:
 80013c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013ca:	bf00      	nop
 80013cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ce:	bc08      	pop	{r3}
 80013d0:	469e      	mov	lr, r3
 80013d2:	4770      	bx	lr
