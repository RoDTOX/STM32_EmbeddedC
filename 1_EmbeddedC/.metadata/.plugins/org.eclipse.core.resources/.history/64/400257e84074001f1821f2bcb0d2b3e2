/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>
#include "main.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

extern void initialise_monitor_handles(void);

int main(void)
{
	initialise_monitor_handles();
    /* Loop forever */
	printf("sizeof struct RCC_AHB1ENR_t = %d\n",sizeof(RCC_AHB1ENR_t));
	printf("Size of short = %d\n", sizeof(short));
	printf("Size of int = %d\n", sizeof(int));
	printf("Size of long = %d\n", sizeof(long));
	printf("Size of long long = %d\n", sizeof(long long));
	printf("Size of double = %d\n", sizeof(double));

	//Enable the clock for GPIOD pheripheral in the ahb1enr + SET 3rd bit position
	RCC_AHB1ENR_t *pClockControl = 	(RCC_AHB1ENR_t *)0x40023830;
	RCC_AHB1ENR_t *pPortDMode = 	(RCC_AHB1ENR_t *)0x40020C00;;
	RCC_AHB1ENR_t *pPortDOut = 		(RCC_AHB1ENR_t *)0x40020C14;
	pClockControl->GPIO_DEN = 1;

	GPIOx_MODE_t *pGPIOMode;
	pGPIOMode = (GPIOx_MODE_t *) 0x40020C00; //RegisterAddress in our Cortex M4 chip

	//set pin_0 in the above address to 1 for output to turn on LED
	pGPIOMode->PIN_0 = 1;

	return 0;
	for(;;);
}
