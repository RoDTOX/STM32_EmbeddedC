/*
 * pn532.c
 *
 *  Created on: May 30, 2024
 *      Author: bogdsece
 */

#include "pn532.h"

extern I2C_HandleTypeDef hi2c1;

HAL_StatusTypeDef PN532_SendCommand(uint8_t* cmd, uint8_t cmd_len)
{
    return HAL_I2C_Master_Transmit(&hi2c1, PN532_I2C_ADDRESS << 1, cmd, cmd_len, HAL_MAX_DELAY);
}

HAL_StatusTypeDef PN532_ReadResponse(uint8_t* buffer, uint8_t buffer_len)
{
    return HAL_I2C_Master_Receive(&hi2c1, PN532_I2C_ADDRESS << 1, buffer, buffer_len, HAL_MAX_DELAY);
}

void PN532_GetFirmwareVersion(void)
{
    uint8_t get_firmware_cmd[] = {
        0x00, 0x00, 0xFF, // Preamble and start code
        0x02, 0xFE, // Length and LCS
        0xD4, 0x02, // TFI and command code
        0x2A, // DCS
        0x00 // Postamble
    };

    if (PN532_SendCommand(get_firmware_cmd, sizeof(get_firmware_cmd)) != HAL_OK)
    {
        Error_Handler();
    }

    uint8_t response[20];
    if (PN532_ReadResponse(response, sizeof(response)) != HAL_OK)
    {
        Error_Handler();
    }

    // Process the response to get firmware version
    // Print the response or check specific bytes in the response
    // You can use a debugger or printf to check the response
}
