/*
 * pn532.c
 *
 *  Created on: May 30, 2024
 *      Author: bogdsece
 */

#include "pn532.h"
#include <stdio.h>

//-------------
#if ENABLE_I2C

extern I2C_HandleTypeDef hi2c1;

HAL_StatusTypeDef PN532_SendCommand(uint8_t* cmd, uint8_t cmd_len)
{
    return HAL_I2C_Master_Transmit(&hi2c1, PN532_I2C_ADDRESS << 1, cmd, cmd_len, HAL_MAX_DELAY);
}

HAL_StatusTypeDef PN532_ReadResponse(uint8_t* buffer, uint8_t buffer_len)
{
    return HAL_I2C_Master_Receive(&hi2c1, PN532_I2C_ADDRESS << 1, buffer, buffer_len, HAL_MAX_DELAY);
}

#endif //ENABLE_I2C
//-------------

//-------------
#if ENABLE_USART

extern UART_HandleTypeDef huart2; // Adjust this if you're using a different UART

HAL_StatusTypeDef PN532_SendCommand(uint8_t* cmd, uint8_t cmd_len)
{
	return HAL_UART_Transmit(&huart2, cmd, cmd_len, HAL_MAX_DELAY);
}

HAL_StatusTypeDef PN532_ReadResponse(uint8_t* buffer, uint8_t buffer_len)
{
	return HAL_UART_Receive(&huart2, buffer, buffer_len, HAL_MAX_DELAY);
}

#endif //ENABL_USART
//-------------

//-------------
void PN532_Wakeup()
{
	// Wake up the PN532
	uint8_t wakeup_cmd[] = {0x55};
	if (HAL_UART_Transmit(&huart2, wakeup_cmd, 1, HAL_MAX_DELAY) != HAL_OK)
	{
	  printf("Failed to wake up PN532\n");
	  Error_Handler();
	}
	else
	{
	  printf("PN532 wakeup command sent\n");
	}

	HAL_Delay(1000); // Delay to allow PN532 to wake up
}
//-------------


//-------------
void PN532_GetFirmwareVersion(void)
{
	uint8_t response[20];
	HAL_StatusTypeDef PN532_ReqStatus = 0;
    uint8_t get_firmware_cmd[] = {
        0x00, 0x00, 0xFF, // Preamble and start code
        0x02, 0xFE, // Length and LCS
        0xD4, 0x02, // TFI and command code
        0x2A, // DCS
        0x00 // Postamble
    };

    PN532_ReqStatus = PN532_SendCommand(get_firmware_cmd, sizeof(get_firmware_cmd));
    if (PN532_ReqStatus == HAL_OK)
    {
    	printf("PN532_GetFirmwareVersion command sent!\n");
    }
    else
    {
    	printf("Error in send PN532_GetFirmwareVersion!\n");
        Error_Handler();
    }

    PN532_ReqStatus = PN532_ReadResponse(response, sizeof(response));
    if (PN532_ReqStatus == HAL_OK)
    {
    	printf("Response of PN532_GetFirmwareVersion = %s\n",&response[0]);
    }
    else
    {
    	printf("Error in reading PN532_GetFirmwareVersion!\n");
        Error_Handler();
    }

    // Process the response to get firmware version
    // Print the response or check specific bytes in the response
    // You can use a debugger or printf to check the response
}
//-------------
